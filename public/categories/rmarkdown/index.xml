<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rmarkdown on Deden Istiawan</title>
    <link>http://localhost:4321/categories/rmarkdown/</link>
    <description>Recent content in Rmarkdown on Deden Istiawan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:4321/categories/rmarkdown/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>We don&#39;t talk about Quarto</title>
      <link>http://localhost:4321/blog/2022-04-we-dont-talk-about-quarto/</link>
      <pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:4321/blog/2022-04-we-dont-talk-about-quarto/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thumbnail image from the 
&lt;a href=&#34;https://d23.com/why-everyone-is-talking-about-bruno-from-encanto/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Official Disney Fan Club
website&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2 id=&#34;background&#34;&gt;Background
  &lt;a href=&#34;#background&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Early last year, I was busily checking 
&lt;a href=&#34;https://quarto.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quarto&lt;/a&gt;,
and totally terrified of checking Twitter. Seriously, I held my breath
every time. It. Was. Not. Ready. It was changing fast and breaking fast.
Everyday I was seeing the GitHub stars slowly creeping up, and I was
nervous. And we had all agreed on our team that &lt;em&gt;&amp;ldquo;We don&amp;rsquo;t talk about
Quarto&amp;rdquo;&lt;/em&gt; on the outside (this was
pre-
&lt;a href=&#34;https://en.wikipedia.org/wiki/Encanto_%28film%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Encanto&lt;/a&gt;). That means
not a single one of us were tweeting or blogging about it, or even at
that point trying to teach it to anyone &amp;mdash; yet.&lt;/p&gt;
&lt;p&gt;But, things started easing up. By the time summer internship positions
at RStudio 
&lt;a href=&#34;https://www.rstudio.com/blog/summer-internship-2021/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;were
announced&lt;/a&gt;, I was
excited to have reserved a slot for our first Quarto intern, who would
be tasked with working with myself, 
&lt;a href=&#34;https://github.com/jjallaire&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JJ
Allaire&lt;/a&gt;, and 
&lt;a href=&#34;https://github.com/dragonstyle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Charles
Teague&lt;/a&gt; to help get the Quarto docs off
the ground. We brought 
&lt;a href=&#34;https://pommevilla.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Paul Villanueva&lt;/a&gt;
on in one of the best hiring decisions I&amp;rsquo;ve made, and he ended up doing
&lt;em&gt;so much more&lt;/em&gt; than just docs! By August 2021, I had convinced Paul to
join me as a TA to teach the first public Quarto workshop for the
R/Medicine. And I honestly felt comfortable teaching Quarto then &amp;mdash; it
felt like it was time. Luckily, the Quarto team had stabilized releases
of Quarto in August before the workshop, and we were able to spin up a
custom RStudio Cloud environment to use a preview release of the RStudio
IDE, and we were off!&lt;/p&gt;
&lt;p&gt;Fast forward to now, and 
&lt;a href=&#34;https://www.nature.com/articles/d41586-022-00563-z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it looks like we are
talking&lt;/a&gt; about
Quarto. I am &amp;gt;6 months from my time at RStudio and I am writing a book
with the amazing 
&lt;a href=&#34;https://github.com/rich-iannone&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rich Iannone&lt;/a&gt; about
doing data science with R and Quarto, in a Quarto book, and I&amp;rsquo;ve built
an internal knowledge repository for my IBM team with Quarto (these are
not R or RStudio users!). So in this post, I thought I&amp;rsquo;d finally share
my notes to myself after testing and teaching Quarto, and now as a user
and enabler.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://media.giphy.com/media/ievgCulkRxHoVBlkwH/giphy.gif&#34; alt=&#34;Mirabel sliding down the stairs in Encanto&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;Mirabel sliding down the stairs in
Encanto&lt;/figcaption&gt;
&lt;/figure&gt;




&lt;h2 id=&#34;what-actually-is-quarto&#34;&gt;What actually is Quarto?
  &lt;a href=&#34;#what-actually-is-quarto&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So thanks for the blog post Alison, but what actually is Quarto?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/HG6FHWzOJQiWvNTPjh/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;That is a great question. Four things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is a way to render plain text source files that contain code
written in Python, R, or Observable.
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you want to use Python, you don&amp;rsquo;t need to install R or
RStudio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to use R, you don&amp;rsquo;t have to install Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to use Observable, you just can in a Quarto document
or project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In any language, when you render, you execute the code and include
plots, tables, and other results in your output woven together with
narrative text. So it is still &amp;ldquo;literate programming.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;When you render, you can export to over 40 different output formats,
all enabled by 
&lt;a href=&#34;https://pandoc.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pandoc&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Quarto adds functionality on top of Pandoc&amp;rsquo;s markdown language, and
the rest of this post will give you some pointers to these features.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Obviously, if you are already an R Markdown user, this will sound pretty
familiar but maybe a &lt;em&gt;shade&lt;/em&gt; different &amp;mdash; yet the software itself is a
completely new incantation designed from the bottom up.&lt;/p&gt;




&lt;h2 id=&#34;what-youll-need-to-know&#34;&gt;What you&amp;rsquo;ll need to know
  &lt;a href=&#34;#what-youll-need-to-know&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Quarto is actually a separate installation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;What to do?&lt;/strong&gt; Follow 
&lt;a href=&#34;https://quarto.org/docs/get-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Step
1&lt;/a&gt; to download Quarto for
your OS. I do this now regularly about once a week to make sure
I&amp;rsquo;m getting the latest goodies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is also an 
&lt;a href=&#34;https://cran.r-project.org/web/packages/quarto/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R
package&lt;/a&gt;,
which will allow you to render at the command line if you aren&amp;rsquo;t
an RStudio IDE/button clicking person, but you could also use
the terminal, which is what I do.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quarto works within the RStudio IDE.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;What to do?&lt;/strong&gt; Download the latest RStudio IDE release from
this link:

&lt;a href=&#34;https://quarto.org/docs/get-started/hello/rstudio.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://quarto.org/docs/get-started/hello/rstudio.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It has actually worked inside the RStudio IDE for almost a year.
It was previously supported only in the

&lt;a href=&#34;https://dailies.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dailies&lt;/a&gt; (which are honestly
low-risk to download and use!). But nowadays it works with the
latest official released version of the RStudio IDE. I still
update my RStudio version to the latest daily whenever I
remember to update Quarto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It also works in 
&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VSCode&lt;/a&gt;; see
&lt;strong&gt;Step 2&lt;/strong&gt; 
&lt;a href=&#34;https://quarto.org/docs/get-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The RStudio IDE&amp;rsquo;s 
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual R Markdown
Editor&lt;/a&gt; was in
actuality the first &amp;ldquo;shots fired&amp;rdquo; from Quarto. The

&lt;a href=&#34;https://www.rstudio.com/blog/rstudio-v1-4-preview-visual-markdown-editing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;announcement&lt;/a&gt;
about the Editor was published 2020/09/30, and the 
&lt;a href=&#34;https://github.com/quarto-dev/quarto-cli/commit/3df555e2ce751ff98a5f0f2e7cd44b45e2dfd60c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;first Quarto
commit&lt;/a&gt;
was only 5 days before on 2020/09/25.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fun fact:&lt;/strong&gt; I forgot to tell our first Quarto intern, Paul,
about the visual editor until about 4 weeks into his
internship&amp;mdash; and it totally changed his outlook, even as an
experienced Markdown user. So don&amp;rsquo;t sleep on the 
&lt;a href=&#34;https://quarto.org/docs/visual-editor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;visual
editor&lt;/a&gt; when teaching
and using Quarto. In particular, don&amp;rsquo;t miss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/content.html#editing-tables&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Easy editing/formatting of Markdown
tables&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy/paste from Google docs (did you know this? Literally
just copy any formatted text from Google docs and paste it
into the visual editor)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/technical.html#citations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Citations&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/options.html#insert-anything&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The &amp;ldquo;insert anything&amp;rdquo; keyboard
shortcut&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/content.html#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emojis
🥰&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-youll-like&#34;&gt;What you&amp;rsquo;ll like
  &lt;a href=&#34;#what-youll-like&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Across &lt;em&gt;all&lt;/em&gt; formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Two column (and more) 
&lt;a href=&#34;https://quarto.org/docs/authoring/figures.html#complex-layouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flexible content
layouts&lt;/a&gt;
for displaying images, code, text, tables, plots, anything. This to
me was the &amp;ldquo;one killer feature&amp;rdquo; when JJ first started showing me
regular demos &amp;mdash; I was floored. While

&lt;a href=&#34;https://patchwork.data-imaginist.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;patchwork&lt;/strong&gt;&lt;/a&gt; can get you
pretty far, this allows for literally anything (including just blank
space) to be in any position, making it a layout swiss army knife.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/execution-options.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Global chunk
options&lt;/a&gt;
set in your YAML using the &lt;code&gt;execute&lt;/code&gt; key (no more 
&lt;a href=&#34;https://apreshill.github.io/rmd4cdc/#112&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;knitr&lt;/strong&gt; setup
chunk&lt;/a&gt;!). See all
supported chunk options (that go beyond &lt;strong&gt;knitr&lt;/strong&gt; ones)

&lt;a href=&#34;https://quarto.org/docs/reference/cells/cells-knitr.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;We don&amp;#39;t talk about Quarto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;subtitle&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Until now!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;execute&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;echo&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instead of:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| label: setup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| include: false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;knitr::opts_chunk$set(echo = FALSE)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/execution-options.html#fenced-echo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Easier verbatim
chunks&lt;/a&gt;
using &lt;code&gt;echo: fenced&lt;/code&gt; as a code chunk option when you want to &lt;em&gt;show
and execute&lt;/em&gt; and double curly braces like &lt;code&gt;{r}&lt;/code&gt; for &lt;em&gt;show and
don&amp;rsquo;t execute&lt;/em&gt; (this was also

&lt;a href=&#34;https://github.com/yihui/knitr/issues/2040&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;improved&lt;/a&gt; in &lt;strong&gt;knitr&lt;/strong&gt;
too recently).&lt;/p&gt;
&lt;p&gt;For example, in the first chunk, I am using this chunk option here
(invisibly) to show a chunk where I am suppressing the results
printing:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| results: hide
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;1 + 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| results: show
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;1 + 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the chunk just above, I would allow the results to be shown, but
because I used &lt;code&gt;{r}&lt;/code&gt; as the chunk engine it isn&amp;rsquo;t evaluated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/r.html#chunk-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chunk
options&lt;/a&gt;
as YAML with the special hashpipe &lt;code&gt;#|&lt;/code&gt; (great for 
&lt;a href=&#34;https://www.rstudio.com/blog/knitr-fig-alt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;longish alt
text&lt;/a&gt;) (note that
Quarto also added a way to 
&lt;a href=&#34;https://quarto.org/docs/authoring/figures.html#alt-text&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;add alt
text&lt;/a&gt; for
Markdown inserted images, thanks to 
&lt;a href=&#34;https://github.com/quarto-dev/quarto-web/issues/20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Silvia
Canelon&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| label: penguin-plot
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| fig-alt: &amp;#34;Scatterplot of flipper length by bill length of 3 penguin species, where we show penguins with bigger flippers have bigger bills.&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| warning: false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;library(palmerpenguins)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(ggplot2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ggplot(data = penguins, aes(x = flipper_length_mm,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            y = bill_length_mm,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            color = species)) +
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  geom_point(aes(shape = species), alpha = 0.8) +
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  scale_color_manual(values = c(&amp;#34;darkorange&amp;#34;,&amp;#34;purple&amp;#34;,&amp;#34;cyan4&amp;#34;)) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;index.markdown_strict_files/figure-markdown_strict/penguin-plot-1.png&#34; data-fig-alt=&#34;Scatterplot of flipper length by bill length of 3 penguin species, where we show penguins with bigger flippers have bigger bills.&#34; width=&#34;768&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Universal

&lt;a href=&#34;https://quarto.org/docs/authoring/cross-references.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cross-referencing&lt;/a&gt;
(
&lt;a href=&#34;https://pkgs.rstudio.com/bookdown/reference/index.html#single-document-output-formats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;no more &lt;code&gt;bookdown::html_document2()&lt;/code&gt;,
etc.&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/parameters.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parameters&lt;/a&gt;
(side note: here is the first &lt;strong&gt;rmarkdown&lt;/strong&gt;

&lt;a href=&#34;https://github.com/rstudio/rmarkdown/issues/33&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; from 2014
that 
&lt;a href=&#34;https://themockup.blog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tom Mock&lt;/a&gt; and I found where the idea
for parameters was &amp;ldquo;born&amp;rdquo; 👶)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, if you are anything like me and your heart belongs to HTML
output&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SUBFOLDERS for projects (praise be). Yes you can have a website or
book or any other multi-file Quarto project and render content in
even deeply nested subdirectories. Rejoice!&lt;/p&gt;
&lt;p&gt;To put in your final product, let your heart decide- you can either

&lt;a href=&#34;https://quarto.org/docs/books/book-structure.html#parts-appendices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;list as chapters or as
parts&lt;/a&gt;
(similar to &lt;strong&gt;bookdown&lt;/strong&gt;) or use 
&lt;a href=&#34;https://quarto.org/docs/websites/website-listings.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;listing
pages&lt;/a&gt; (like
with &lt;strong&gt;distill&lt;/strong&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built-in site

&lt;a href=&#34;https://quarto.org/docs/websites/website-navigation.html#site-search&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;search&lt;/a&gt;
(enabled by default for books and websites). Can also be

&lt;a href=&#34;https://quarto.org/docs/websites/website-search.html#search-appearance&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tweaked&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Batteries included&amp;rdquo; HTML features across single documents and
projects (like HTML books, websites, etc). This may be a RIP to the
wonderful 
&lt;a href=&#34;https://holtzy.github.io/Pimp-my-rmd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Pimp my Rmd&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Here are just a few features that were available in some but not
all R packages with &lt;code&gt;.Rmd&lt;/code&gt; ▶️ HTML output formats: 
&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#folding-code&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code
folding&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#copy-button&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;copy/paste
chunks&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/authoring/callouts.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;callout
blocks&lt;/a&gt;, 
&lt;a href=&#34;https://quarto.org/docs/output-formats/html-basics.html#table-of-contents&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TOC
on the
side&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#code-linking&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code
linking&lt;/a&gt;
via 
&lt;a href=&#34;https://downlit.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;downlit&lt;/a&gt; (previously only
available in 
&lt;a href=&#34;https://pkgdown.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pkgdown&lt;/a&gt;),

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-basics.html#tabsets&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tabsets&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-basics.html#anchor-sections&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;anchored
headings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#code-tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Show
source&lt;/a&gt;
to anyone viewing your HTML output (this was previously only
possible with &lt;code&gt;rmarkdown::html_document()&lt;/code&gt; - 
&lt;a href=&#34;https://twitter.com/apreshill/status/1108925218850893832?lang=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my
tweet&lt;/a&gt;
from when I first discovered this output option!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compatibility with

&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;/
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt;.
This post is a &lt;code&gt;.qmd&lt;/code&gt; file with &lt;code&gt;format: hugo&lt;/code&gt; 
&lt;a href=&#34;https://quarto.org/docs/output-formats/hugo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rendered with
Quarto&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;We don&amp;#39;t talk about Quarto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;subtitle&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Until now!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;format&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;hugo&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is nothing stopping you from using Quarto to render individual
posts, then blogdown to use Hugo, or just use Hugo from command
line. The Hugo-specific flavor of Markdown
(
&lt;a href=&#34;https://gohugo.io/getting-started/configuration-markup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;goldmark&lt;/a&gt;)
is also 
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing/markdown.html#hugo-markdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;supported by the visual
editor&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-youll-stumble-on&#34;&gt;What you&amp;rsquo;ll stumble on
  &lt;a href=&#34;#what-youll-stumble-on&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chunk options as YAML&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;#| fig-alt: &amp;#34;Scatterplot of flipper length by bill length of 3 penguin species, where we show penguins with bigger flippers have bigger bills.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;#| echo: false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;#| warning: false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;I always forgot the symbol, which is &lt;code&gt;#|&lt;/code&gt; (read: the hashpipe).
If you also cannot remember this, channel your 90s kid and enjoy
this Weezer flashback:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
    
        
        &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
          &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/_9BGLtqqkVI?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;
          &gt;&lt;/iframe&gt;
        &lt;/div&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No equal sign, use a colon instead (i.e., &lt;code&gt;comment: &#39;&#39;&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the value is &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;, use lower case! (no more
screaming booleans!) 😱 So &lt;code&gt;echo: false&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To render to a specific format, use the &lt;code&gt;format&lt;/code&gt; YAML key (instead
of &lt;code&gt;output&lt;/code&gt;)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;We don&amp;#39;t talk about Quarto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;subtitle&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Until now!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;format&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;html&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;kebab-case&lt;/code&gt; 🍡 for all YAML keys &lt;em&gt;and&lt;/em&gt; to delimit
figure/layout/code chunk options instead of &amp;hellip; what we had before.&lt;/p&gt;
&lt;p&gt;This will be confusing at first because your &lt;strong&gt;knitr&lt;/strong&gt; chunk options
won&amp;rsquo;t match the package documentation. See

&lt;a href=&#34;https://github.com/quarto-dev/quarto-cli/pull/83&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for the
change (Quarto will auto-convert &lt;code&gt;fig.alt&lt;/code&gt; for example to &lt;code&gt;fig-alt&lt;/code&gt;,
but still, you or someone you teach might be confused by this).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You&amp;rsquo;ll be rendering as your verb, not knitting 🧶 but you&amp;rsquo;ll still
be using the &lt;strong&gt;knitr&lt;/strong&gt; package as your

&lt;a href=&#34;https://quarto.org/docs/tools/rstudio.html#knitr-engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;engine&lt;/a&gt; if
you want to use R instead of Python code chunks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This also means to watch &lt;strong&gt;knitr&lt;/strong&gt; for news! 
&lt;a href=&#34;https://github.com/yihui/knitr/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Follow releases
carefully&lt;/a&gt;&amp;mdash; they will
still matter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For projects like books, websites, blogs, &lt;code&gt;quarto render&lt;/code&gt; vs
&lt;code&gt;quarto preview&lt;/code&gt;. See docs

&lt;a href=&#34;https://quarto.org/docs/websites/#workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Not sure I have
advice at this point, but do read this bit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that development server updates do not cause an update to the
final site output. Consequently, you should always &lt;code&gt;quarto render&lt;/code&gt;
your site before deploying it, even if you have already previewed
the changes with the development server [with &lt;code&gt;quarto preview&lt;/code&gt;].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-youll-miss-for-now&#34;&gt;What you&amp;rsquo;ll miss (for now)
  &lt;a href=&#34;#what-youll-miss-for-now&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Defining your own format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Making and bundling templates that are easily shareable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xaringan and remark.js for slides. This particular package and
flavor of markdown was 
&lt;a href=&#34;https://github.com/yihui/xaringan/issues/300&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;never supported in the visual
editor&lt;/a&gt; because it is
not a Pandoc-defined output format (the visual editor is specific to
Pandoc-flavored markdown). So for HTML slides in Quarto,

&lt;a href=&#34;https://quarto.org/docs/reference/formats/presentations/revealjs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reveal.js&lt;/a&gt;
is where it is at. I had a 
&lt;a href=&#34;../../../..%5cblog/2021-07-revealing-research/&#34;&gt;post&lt;/a&gt;
about doing that research too (actually all my testing at that time
was in Quarto!).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-you-probably-wont-miss&#34;&gt;What you (probably) won&amp;rsquo;t miss
  &lt;a href=&#34;#what-you-probably-wont-miss&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;All the packages, each one working &lt;em&gt;slightly&lt;/em&gt; different than the ones
you had already used. Essentially your experience trying to figure out
to work the shower everytime you go to a new hotel, but for each package
in the R Markdown ecosystem:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-dnt=&#34;true&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Every dang hotel I&amp;#39;ve stayed in. &lt;a href=&#34;https://t.co/xPb7PdwG2f&#34;&gt;pic.twitter.com/xPb7PdwG2f&lt;/a&gt;&lt;/p&gt;&amp;mdash; Keith Humphreys (@KeithNHumphreys) &lt;a href=&#34;https://twitter.com/KeithNHumphreys/status/1459606451467390976?ref_src=twsrc%5Etfw&#34;&gt;November 13, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are on my blog, you are probably an R Markdown lover. As well you
should be. As am I. But who among us has not chased their own tail for
hours trying to figure out why one YAML key works over &lt;em&gt;here&lt;/em&gt; but not
over &lt;em&gt;there&lt;/em&gt;. Or perhaps you simply lacked the wherewithall to branch
out into the various extension packages because you sensed a rabbit hole
ahead. Or maybe you were a person who filed or upvoted GitHub issues
begging RStudio folks to just give you tabsets for

&lt;a href=&#34;https://github.com/rstudio/distill/issues/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;every&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/429&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;single&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/69&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;html-based&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/bookdown/issues/1219&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;output&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/175&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;format&lt;/a&gt;. You probably
will not miss this.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;This one screwed me up so bad, I actually tried to go back to
&lt;strong&gt;rmarkdown&lt;/strong&gt; at one point and couldn&amp;rsquo;t figure out why I couldn&amp;rsquo;t
knit to &lt;code&gt;output_format: html_document&lt;/code&gt; 🤦🏻&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Up and running with officedown</title>
      <link>http://localhost:4321/blog/2021-07-officedown/</link>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:4321/blog/2021-07-officedown/</guid>
      <description>&lt;p&gt;Lately, I&amp;rsquo;ve been exploring the world of R Markdown through the lens of knitting to Microsoft output formats like Word and PowerPoint. I wanted to write down what I&amp;rsquo;ve learned so far about the officedown package for making PowerPoint (PPT) slides with R Markdown. It is extremely powerful, and I&amp;rsquo;ve now referred a lot of folks to it, but it was pretty hard for me to grasp at first. These notes are a rough account of my own personal 
&lt;a href=&#34;https://www.trychameleon.com/blog/friction-logs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;friction log&lt;/a&gt; for the next time I use officedown.&lt;/p&gt;




&lt;h2 id=&#34;why-use-officedown&#34;&gt;Why use officedown?
  &lt;a href=&#34;#why-use-officedown&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Why use it? To knit to Microsoft PowerPoint (and Word). Naturally, you might ask, but Alison- there is an &lt;code&gt;rmarkdown::powerpoint_presentation&lt;/code&gt; output format already. Yes 
&lt;a href=&#34;https://pkgs.rstudio.com/rmarkdown/reference/powerpoint_presentation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;there is&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a great use case for not using that format though, from 
&lt;a href=&#34;https://www.pipinghotdata.com/about.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shannon Pileggi&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I don&amp;rsquo;t knit directly to ppt b/c editable graphics are key for finishing touches in our deliverables. If we could knit to powerpoint with an editable graphics option like in officer that would be a great feature.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/rstudio/rmarkdown/issues/2158&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Issue thread&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So officedown is definitely the answer for many users who wish to go beyond what the rmarkdown package can offer. For more on editable graphic workflows with R, Shannon has a 
&lt;a href=&#34;https://www.pipinghotdata.com/posts/2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;great blog post&lt;/a&gt;.&lt;/p&gt;




&lt;h2 id=&#34;what-is-officedown&#34;&gt;What is officedown?
  &lt;a href=&#34;#what-is-officedown&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;It is a package whose goal is to allows users to write Word and Powerpoint documents using R Markdown. Install from CRAN:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;officedown&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(It will also download the officer package for you).&lt;/p&gt;
&lt;p&gt;Note that the GitHub page for this package does not include an &lt;strong&gt;Issues&lt;/strong&gt; tab: 
&lt;a href=&#34;https://github.com/davidgohel/officedown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/davidgohel/officedown&lt;/a&gt; This means there is no way for users to file bug reports, feature requests, etc. This is definitely a developer&amp;rsquo;s choice, but I&amp;rsquo;m not sure how to find a community of users for officedown questions or to get help if you suspect a bug. RStudio Community has a tag but only two posts as of today, one of which was asked by an RStudio employee and never answered &amp;#x1f62d; : 
&lt;a href=&#34;https://community.rstudio.com/tag/officedown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://community.rstudio.com/tag/officedown&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Officedown works with editable graphics &lt;em&gt;by default&lt;/em&gt;. This is huge plus for some workflows (like Shannon&amp;rsquo;s), but also a huge gotcha because it depends on another package that I didn&amp;rsquo;t know about and that officedown did not import for me: the 
&lt;a href=&#34;https://davidgohel.github.io/rvg/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rvg package&lt;/a&gt;. You must install it separately:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;rvg&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I suspect but cannot confirm that the name of the package is r + vg (vector graphics). Then there is a function in that package that you &lt;em&gt;must&lt;/em&gt; use: &lt;code&gt;rvg::dml()&lt;/code&gt;, which I can with certainty tell you stands for DrawingML.&lt;/p&gt;
&lt;p&gt;What is DrawingML? Oh I&amp;rsquo;m so glad you asked, here is a link about it: 
&lt;a href=&#34;http://officeopenxml.com/drwOverview.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://officeopenxml.com/drwOverview.php&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;DrawingML is the language for defining graphical objects such as pictures, shapes, charts, and diagrams within ooxml documents.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What is ooxml?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Office Open XML, also known as OpenXML or OOXML, is an XML-based format for office documents, including word processing documents, spreadsheets, presentations, as well as charts, diagrams, shapes, and other graphical material.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Want more weird acronyms?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;It is important to keep in mind that OOXML is not the same as Open Office XML or the Open Document Format (ODF) that underlies the OpenOffice.org and other open source office software. Office Open XML and Open Office XML or ODF are in some sense competing XML standards for office documents.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What is XML?&lt;/p&gt;
&lt;p&gt;Learn here: 
&lt;a href=&#34;https://learnxinyminutes.com/docs/xml/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://learnxinyminutes.com/docs/xml/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Still want more? A brief history here:&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Office_Open_XML_file_formats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Office_Open_XML_file_formats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Do you need to know much of these acronyms? No, not really, but you&amp;rsquo;ll want &lt;code&gt;rvg::dml()&lt;/code&gt; burned into your brain as you&amp;rsquo;ll be typing it often.&lt;/p&gt;




&lt;h2 id=&#34;where-are-the-docs-at&#34;&gt;Where are the docs at?
  &lt;a href=&#34;#where-are-the-docs-at&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The creator of the officeverse collection of packages, which officedown is a part of, is named David Gohel. He has a bookdown book with a chapter on officedown, but it is only about Word rather than PPT output:&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://ardata-fr.github.io/officeverse/officedown-for-word.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://ardata-fr.github.io/officeverse/officedown-for-word.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For this reason alone, you may not realize you can use officedown to knit to PPT! I certainly didn&amp;rsquo;t until my colleague 
&lt;a href=&#34;https://cderv.rbind.io/about/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Christophe Dervieux&lt;/a&gt; gave me enough support to try it on my own.&lt;/p&gt;
&lt;p&gt;Here is the documentation for the PPT output format, although I found it minimally helpful:

&lt;a href=&#34;https://davidgohel.github.io/officedown/reference/rpptx_document.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://davidgohel.github.io/officedown/reference/rpptx_document.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I also found this video from a recent meetup by the package author helpful to watch:&lt;/p&gt;


    
    &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/sWDhPI8gKGg?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;
      &gt;&lt;/iframe&gt;
    &lt;/div&gt;





&lt;h2 id=&#34;so-how-do-i-use-it&#34;&gt;So how do I use it?
  &lt;a href=&#34;#so-how-do-i-use-it&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The new output format officedown gives you is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-.yaml&#34; data-lang=&#34;.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;output&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;officedown::rpptx_document&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Christophe shared this link with me, and it helped lot: 
&lt;a href=&#34;https://github.com/davidgohel/officedown/blob/master/inst/examples/minimal_powerpoint.Rmd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/davidgohel/officedown/blob/master/inst/examples/minimal_powerpoint.Rmd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t realize at first that the package contains built-in R Markdown templates, which is now where I wish I had started. Use RStudio to access: &lt;em&gt;File &amp;gt; New File &amp;gt; R Markdown &amp;gt; From Template&lt;/em&gt; then find:&lt;/p&gt;
&lt;img src=&#34;template.png&#34; width=&#34;662&#34; /&gt;
&lt;p&gt;Once you are inside, go ahead and knit freely. I also recommend loading up a reference template sooner rather than later so you aren&amp;rsquo;t looking at that default deck for long. Here is how you add a reference template:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-.yaml&#34; data-lang=&#34;.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;output&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;officedown::rpptx_document&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;reference_doc&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;alison-template.pptx&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can download my simple one here: 
&lt;a href=&#34;https://github.com/apreshill/rmd2ppt/tree/main/templates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/apreshill/rmd2ppt/tree/main/templates&lt;/a&gt;&lt;/p&gt;




&lt;h2 id=&#34;a-brief-walk-through-the-template&#34;&gt;A brief walk through the template
  &lt;a href=&#34;#a-brief-walk-through-the-template&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;First, you have the packages loaded. Both &lt;code&gt;officedown&lt;/code&gt; and &lt;code&gt;rvg&lt;/code&gt; are critical here.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r setup, include=FALSE}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;knitr::opts_chunk$set(echo = FALSE, fig.cap = TRUE)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(officedown)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(ggplot2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(rvg)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you try to knit the same deck without the &lt;code&gt;officedown&lt;/code&gt; package loaded, you will see slides like this:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;oops-plot1.png&#34; alt=&#34;Two bad slides.&#34; width=&#34;49%&#34; /&gt;&lt;img src=&#34;oops-plot2.png&#34; alt=&#34;Two bad slides.&#34; width=&#34;49%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Figure 1: Two bad slides.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;With officedown loaded, you should instead see:&lt;/p&gt;
&lt;img src=&#34;good-tabs.png&#34; width=&#34;1065&#34; /&gt;
&lt;p&gt;Next up, you&amp;rsquo;ll see slide number 1 (not to be confused with your title slide, which is populated from the YAML):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r layout=&amp;#39;Two Content&amp;#39;, ph=officer::ph_location_left()}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head(cars)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d14&#34;&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r layout=&amp;#39;Two Content&amp;#39;, ph=officer::ph_location_right()}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head(iris)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#d14&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above creates two columns of R-based content. You won&amp;rsquo;t be able to add normal text to this slide. If you want normal text in one column opposite a plot, scroll down to this text in the template to see how:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## ggplot in right column
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt; Some
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt; Bullets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r ph=officer::ph_location_right()}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mygg &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;ggplot&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;pressure&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;aes&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;x &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;temperature,&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;y &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;pressure))&lt;/span&gt; &lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#008080&#34;&gt;geom_point&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008080&#34;&gt;dml&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;ggobj &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;mygg)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;```&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which produces:&lt;/p&gt;
&lt;img src=&#34;two-col.png&#34; width=&#34;1068&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;If you only wanted to use Markdown in each column, you&amp;rsquo;ll need to fall back on Pandoc&amp;rsquo;s two column syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Pandoc columns
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::: {.columns}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: {.column}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;over here
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: {.column}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;over there
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::::
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Before you get any further, let&amp;rsquo;s explain these &lt;code&gt;ph&lt;/code&gt; things.&lt;/p&gt;




&lt;h3 id=&#34;placeholders&#34;&gt;Placeholders
  &lt;a href=&#34;#placeholders&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;These &lt;code&gt;ph&lt;/code&gt; knitr code chunk options are part of the officedown package, so in order to use them you must load the package! &lt;code&gt;ph&lt;/code&gt; stands for placeholder, and this is a specific way that Microsoft pours your 
&lt;a href=&#34;https://support.microsoft.com/en-us/office/add-edit-or-remove-a-placeholder-on-a-slide-layout-a8d93d28-66cb-43fd-9f9d-e12d0a7a1f06&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slide content into a PowerPoint template&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;ph.png&#34; width=&#34;276&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;It is essentially a bunch of rectangles on a slide, each called a placeholder. Placeholders typically can hold either text or an image, but not both. For example, in a typical PowerPoint slide like the one above, you can insert either text (often with bullets) or an image &amp;ndash; but that is &lt;strong&gt;it&lt;/strong&gt;! The title is text, and is a separate placeholder.&lt;/p&gt;
&lt;p&gt;Placeholder values are themselves functions from the officer package with optional function arguments. Now I personally feel that &lt;code&gt;officer::ph_location_left()&lt;/code&gt; and &lt;code&gt;officer::ph_location_right()&lt;/code&gt; are a little long to type over and over again, which you will. Obviously you could load the officer package at the top, but still that function name is lengthy. I don&amp;rsquo;t have an answer for simplifying because there is no code completion for knitr chunk options. Maybe 
&lt;a href=&#34;https://github.com/gadenbuie/snippets&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;snippets&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Technically you can do left vs right with &lt;code&gt;rmarkdown::powerpoint_presentation&lt;/code&gt; too, but you have more options here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ph_location_type(type=&amp;quot;body&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ph_location_fullsize()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ph_location(width = 2, height = 2, left = 2, top = 2)&lt;/code&gt; (for example)&lt;/li&gt;
&lt;li&gt;More documented here: 
&lt;a href=&#34;https://davidgohel.github.io/officer/reference/index.html#section-slide-content&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://davidgohel.github.io/officer/reference/index.html#section-slide-content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3 id=&#34;layouts&#34;&gt;Layouts
  &lt;a href=&#34;#layouts&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;layout&lt;/code&gt; chunk option is harder. I think this name comes from the template you are using. To see your &lt;em&gt;actual&lt;/em&gt; options, I recommend now using the officer package directly to &lt;code&gt;read_pptx()&lt;/code&gt; of your template file, and the using &lt;code&gt;layout_summary()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;## Seeing my layout options&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is handy, `officer::layout_summary()`
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r echo=FALSE}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(officer)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my_template &amp;lt;- read_pptx(&amp;#34;alison-template.pptx&amp;#34;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;layout_summary(my_template) %&amp;gt;% knitr::kable()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here was my output:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;layout&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;master&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Title Slide&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Title and Vertical Text&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Vertical Title and Text&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Title and Content&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Section Header&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Two Content&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Comparison&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Title Only&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Blank&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Content with Caption&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Picture with Caption&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Office Theme&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can use any of these as valid &lt;code&gt;layout&lt;/code&gt;s. This is another difference between &lt;code&gt;rmarkdown::powerpoint_presentation&lt;/code&gt; which only supports four layouts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Title Slide&lt;/li&gt;
&lt;li&gt;Title and Content&lt;/li&gt;
&lt;li&gt;Section Header&lt;/li&gt;
&lt;li&gt;Two Content&lt;/li&gt;
&lt;/ol&gt;




&lt;h3 id=&#34;new-slides&#34;&gt;New slides
  &lt;a href=&#34;#new-slides&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;You might be wondering at this point is &amp;ldquo;how do I make new slides?&amp;rdquo; and &amp;ldquo;how does it know where a new slide starts?&amp;rdquo; This format derives from &lt;code&gt;rmarkdown::powerpoint_presentation&lt;/code&gt;, which derives from Pandoc. Pandoc documents 
&lt;a href=&#34;https://pandoc.org/MANUAL.html#structuring-the-slide-show&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slide separators&lt;/a&gt; as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By default, the slide level is the highest heading level in the hierarchy that is followed immediately by content, and not another heading, somewhere in the document. In the example above, level-1 headings are always followed by level-2 headings, which are followed by content, so the slide level is 2. This default can be overridden using the &amp;ndash;slide-level option.&lt;/p&gt;
&lt;p&gt;The document is carved up into slides according to the following rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A horizontal rule always starts a new slide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A heading at the slide level always starts a new slide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Headings below the slide level in the hierarchy create headings within a slide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Headings above the slide level in the hierarchy create “title slides,” which just contain the section title and help to break the slide show into sections. Non-slide content under these headings will be included on the title slide (for HTML slide shows) or in a subsequent slide with the same title (for beamer).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A title page is constructed automatically from the document’s title block, if present. (In the case of beamer, this can be disabled by commenting out some lines in the default template.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clear? Right, yea it confuses me too every time.&lt;/p&gt;
&lt;p&gt;The default &lt;code&gt;slide_level&lt;/code&gt; is 2, which means that you should expect to start new slides with &lt;code&gt;## My slide title&lt;/code&gt;. Starting a slide with &lt;code&gt;# A level 1 header&lt;/code&gt; will create a section title slide, using your section header layout (see 
&lt;a href=&#34;#layouts&#34;&gt;layouts above&lt;/a&gt;), and none of your body text will be displayed. You could change this in your YAML, but I recommend keeping the default:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-.yaml&#34; data-lang=&#34;.yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;output&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;officedown::rpptx_document&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;reference_doc&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;alison-template.pptx&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;slide_level&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;# default + recommended&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With that default, if you added:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;# Let&amp;#39;s goooo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Tables
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You would see:&lt;/p&gt;
&lt;img src=&#34;title-slide.png&#34; width=&#34;479&#34; /&gt;
&lt;p&gt;You cannot have normal body text on a section slide, so don&amp;rsquo;t add anything between those two slides or Pandoc will helpfully split off a new slide:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;# Let&amp;#39;s goooo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;anybody home?  &amp;lt;&lt;span style=&#34;color:#000080&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;don&lt;/span&gt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#008080&#34;&gt;this&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With &lt;code&gt;slide_level: 2&lt;/code&gt;, here is how a deck gets chopped up:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;# I&amp;#39;m a new slide- a section header
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## I&amp;#39;m slide number 2, with content
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;### I&amp;#39;m also slide number 2, text is slightly bold
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I&amp;#39;m content on slide number 2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## I&amp;#39;m slide number 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;# I&amp;#39;m slide number 4- another section header
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can force a slide break using &lt;code&gt;---&lt;/code&gt;, but headers will still work the same way.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;# I&amp;#39;m a new slide- a section header
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## I&amp;#39;m slide number 2, with content
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;### I&amp;#39;m also slide number 2, text is slightly bold
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I&amp;#39;m slide number 3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## I&amp;#39;m slide number 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;# I&amp;#39;m slide number 5- another section header
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h3 id=&#34;plots&#34;&gt;Plots
  &lt;a href=&#34;#plots&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Including plots for me was sadly a long drawn-out affair. I didn&amp;rsquo;t understand:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I had to use the &lt;code&gt;rvg::dml()&lt;/code&gt; wrapper for plots, even if I didn&amp;rsquo;t care if they were editable or not. This is &lt;em&gt;required&lt;/em&gt; if you don&amp;rsquo;t want &lt;strong&gt;TRUE&lt;/strong&gt; printed after each plot. In a two-column slide layout, non-&lt;code&gt;dml()&lt;/code&gt; wrapped plots will also appear on a slide by themselves, without an error.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;true-plot1.png&#34; width=&#34;49%&#34; /&gt;&lt;img src=&#34;true-plot2.png&#34; width=&#34;49%&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you further want to use ggplot2, you &lt;em&gt;also&lt;/em&gt; cannot just print your plot object, you must use &lt;code&gt;dml(ggobj = my_plot)&lt;/code&gt;. This one &lt;em&gt;really&lt;/em&gt; got me. Again, in the template, but less well-documented elsewhere. If you try to wrap a ggplot2 object in &lt;code&gt;dml()&lt;/code&gt; only, you might see this error:&lt;/p&gt;
 &lt;img src=&#34;dml-error.png&#34; width=&#34;730&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot combine text and code or plots inside the same placeholder. They cannot co-exist. If you do, the text is either overlaid or covered up by your code/output. This is how &lt;code&gt;rmarkdown::powerpoint_presentation&lt;/code&gt; works as well. A way around it is to use figure and table captions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I use &lt;code&gt;ref.label&lt;/code&gt; all the time to 
&lt;a href=&#34;https://yihui.org/en/2021/05/knitr-reuse/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reuse code chunks&lt;/a&gt;, especially for plots. Because of the above, you&amp;rsquo;ll need to always create and save a plot object, then wrap it is &lt;code&gt;rvg::dml(ggobj=mygg)&lt;/code&gt; in the origin chunk. I get an error if I try to use the magrittr pipe here (&lt;code&gt;%&amp;gt;%&lt;/code&gt; , so this gets a bit laborious to change your plotting ways. For example:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;## Testing officedown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r flipper-hist, include=FALSE}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(palmerpenguins)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(dplyr)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(ggplot2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Histogram example: flipper length by species
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flipper-hist &amp;lt;- ggplot(data = penguins, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       aes(x = flipper_length_mm)) +
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  geom_histogram(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    aes(fill = species),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alpha = 0.5, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    position = &amp;#34;identity&amp;#34;) + 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  scale_fill_manual(values = c(&amp;#34;darkorange&amp;#34;,&amp;#34;darkorchid&amp;#34;,&amp;#34;cyan4&amp;#34;)) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rvg::dml(ggobj = flipper-hist) # you must do this!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r layout=&amp;#39;Two Content&amp;#39;, width=2, ph=officer::ph_location_left(), warning=FALSE, message=FALSE, echo=FALSE}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;penguins %&amp;gt;% 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  count(species)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r ref.label=&amp;#39;flipper-hist&amp;#39;, width=2, layout=&amp;#39;Two Content&amp;#39;, ph=officer::ph_location_right(), echo=FALSE, warning=FALSE, message=FALSE}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h2 id=&#34;wrapping-up&#34;&gt;Wrapping up
  &lt;a href=&#34;#wrapping-up&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;This is as far as I got with officedown. I can see it being very useful to users who need more control over their Microsoft outputs than base rmarkdown and Pandoc can provide. However, there are definitely some places where a typical R Markdown user will accumulate pretty serious papercuts.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d love to hear about happy officedown use cases and the problems it solves for teams! I know a lot of organizations run on Microsoft Office products, so I appreciate the hard work that has gone into this suite of tools.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Revealing research</title>
      <link>http://localhost:4321/blog/2021-07-revealing-research/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:4321/blog/2021-07-revealing-research/</guid>
      <description>&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/clipboard/clipboard.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/shareon/shareon.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/shareon/shareon.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/xaringanExtra-shareagain/shareagain.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/xaringanExtra-shareagain/shareagain.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/fitvids/fitvids.min.js&#34;&gt;&lt;/script&gt;




&lt;h2 id=&#34;background&#34;&gt;Background
  &lt;a href=&#34;#background&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Lately, one of the most exciting things you can say to me (at work) is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Why aren’t people using X? What are the problems with X, and how can
we fix them?”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sometimes, I know these answers already by heart,
because I have lived and breathed X. This is how blogdown was for me -

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/476&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;I felt very tuned in to the usability problems
there&lt;/a&gt;, and had 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/525&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;good
ideas for how to resolve
them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other times, I have not used X (yet!). This happened to me recently when
I was asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Why aren’t people using reveal.js for slides with R
Markdown? What are the problems with reveal.js, and how can we fix
them?”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What is reveal.js? Here is a demo deck:&lt;/p&gt;
&lt;iframe src=&#34;https://revealjs.com/demo/&#34; width=&#34;672&#34; height=&#34;400px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;It’s possible you’ve heard or seen reveal.js before - and it didn’t look this good! It may have looked more like this:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;revealjs-1.png&#34; alt=&#34;Two sample slides created from the revealjs package.&#34; width=&#34;49%&#34; /&gt;&lt;img src=&#34;revealjs-2.png&#34; alt=&#34;Two sample slides created from the revealjs package.&#34; width=&#34;49%&#34; /&gt;&lt;/p&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Two sample slides created from the revealjs package.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This…never quite worked for me. If you know my work, you know I’m a pretty big fan of the

&lt;a href=&#34;https://github.com/yihui/xaringan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xaringan package&lt;/a&gt; by 
&lt;a href=&#34;https://yihui.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Yihui
Xie&lt;/a&gt; for making HTML-based slides with R Markdown.
That package wraps a third-party JavaScript library called

&lt;a href=&#34;https://github.com/gnab/remark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;remark.js&lt;/a&gt; and lets you use that to
knit R code and its output into your remark.js slides. I’ve used
xaringan for 
&lt;a href=&#34;https://alison.rbind.io/talk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;years&lt;/a&gt;, and have taught it
quite a lot too. It helps me make slides like this:&lt;/p&gt;
&lt;div class=&#34;shareagain&#34; style=&#34;min-width:300px;margin:1em auto;&#34;&gt;
&lt;iframe src=&#34;https://alison.netlify.app/ares-kind-tools/#1&#34; width=&#34;1600&#34; height=&#34;900&#34; style=&#34;border:2px solid currentColor;&#34; loading=&#34;lazy&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;script&gt;fitvids(&#39;.shareagain&#39;, {players: &#39;iframe&#39;});&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;I love it, but also recognize that 
&lt;a href=&#34;https://community.rstudio.com/t/r-presentations-for-beginners/1222&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it is
hard&lt;/a&gt;,
and that it is not intended for beginners (hence the “ninja” references
in the package name and supporting documentation).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Which is too bad, because I think HTML-based slides are a great way for beginners to get started using R Markdown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So here we are! Why aren’t people using reveal.js? I set out to find
out, and thought this was a great example of one of the things I love
most about being a Product Manager. Since I am not a current user, but
would conceivably be a target user, I get to play the part of the
“wide-eyed doe in the woods” - eager to learn but also a little cautious - will reveal.js cause me pain? It is likely&lt;/p&gt;
&lt;p&gt;Plus, since it has been almost 6 months since my last blog post, I thought I would turn this early research project into a blog post to give a glimpse of some of the daily work I do as the Product Manager for Data Science Communication at RStudio.&lt;/p&gt;




&lt;h2 id=&#34;goal&#34;&gt;Goal
  &lt;a href=&#34;#goal&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Understand how users experience using reveal.js to make slides, and
identify areas for improvement.&lt;/p&gt;




&lt;h2 id=&#34;the-competition&#34;&gt;The competition
  &lt;a href=&#34;#the-competition&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The landscape of HTML slide-making is unfortunately pretty big, but it’s important to sketch it out. There
are lots of frameworks, largely based off of different JavaScript tools.
I see almost a new one a month! If you just look at Pandoc alone, it
supports 
&lt;a href=&#34;https://pandoc.org/MANUAL.html#slide-shows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;five different
frameworks&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://meyerweb.com/eric/tools/s5/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;S5&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://paulrouget.com/dzslides/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DZSlides&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.w3.org/Talks/Tools/Slidy2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slidy&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://goessner.net/articles/slideous/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slideous&lt;/a&gt;, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://revealjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reveal.js&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/gnab/remark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remark.js&lt;/a&gt; is another popular one, as I
mentioned earlier. There is also

&lt;a href=&#34;https://webslides.tv/#slide=1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Webslides&lt;/a&gt;. And

&lt;a href=&#34;https://sli.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slidev&lt;/a&gt;. And 
&lt;a href=&#34;https://github.com/shower/shower&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shower&lt;/a&gt;. And 
&lt;a href=&#34;https://marp.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Marp&lt;/a&gt;. And more I’m sure! (In fact, here is a 
&lt;a href=&#34;https://gist.github.com/johnloy/27dd124ad40e210e91c70dd1c24ac8c8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gist&lt;/a&gt; with more.)&lt;/p&gt;
&lt;p&gt;The rmarkdown package also supports

&lt;a href=&#34;https://pkgs.rstudio.com/rmarkdown/reference/ioslides_presentation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ioslides&lt;/a&gt;
as an output format.&lt;/p&gt;




&lt;h2 id=&#34;why-revealjs&#34;&gt;Why reveal.js?
  &lt;a href=&#34;#why-revealjs&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So starting simple: why do we think R Markdown users could benefit from
using reveal.js?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Pandoc slide syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual editor
support&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Powered by 
&lt;a href=&#34;https://slides.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slides.com&lt;/a&gt; for publishing/sharing-
so well supported (that is paid though)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Good docs: 
&lt;a href=&#34;https://revealjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extensive plug-ins are available to extend:

&lt;a href=&#34;https://revealjs.com/plugins/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/plugins/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have an existing package (
&lt;a href=&#34;https://github.com/rstudio/revealjs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rstudio/revealjs&lt;/a&gt;)
(albeit a little out-of-date)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built in themes: 
&lt;a href=&#34;https://revealjs.com/themes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/themes/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is also a supported slideshow framework for Jupyter/IPython via

&lt;a href=&#34;https://rise.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RISE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom themes are possible (but perhaps not easy) using SASS layers: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;research-questions&#34;&gt;Research questions
  &lt;a href=&#34;#research-questions&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Given all these pluses, and the competition, what do we want to know/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Functionality]&lt;/code&gt; How, if at all, do users expect to use reveal.js?
What problems does it solve for them, and what are unaddressed
problems?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Ease of use]&lt;/code&gt; Where, if at all, do users express uncertainty,
frustration, or confusion? What API problems arise?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Task success]&lt;/code&gt; What kinds of messages, warnings, or errors do
users encounter when using reveal.js? Where, if at all, do they get
stuck or confused? What, if any, strategies or resources do they
find for troubleshooting?&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;method&#34;&gt;Method
  &lt;a href=&#34;#method&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;With these goals in mind, I wanted to start with just a few days of work, because I couldn’t tell how big of a project this was. So I didn’t want to do user interviews.&lt;/p&gt;
&lt;p&gt;Instead, I relied on combing through community forums, blog posts,
existing documentation, and GitHub issues to trace the outline of the
problem space first. I actually got a lot of mileage from this exercise,
even without direct user input.&lt;/p&gt;
&lt;p&gt;Here were some of my primary research resources (GitHub issues I tracked
inline with my notes below):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;http://www.jenniferbradham.org/post/reveal_js_markdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.jenniferbradham.org/post/reveal_js_markdown/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.caitlincasar.com/post/revealjs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.caitlincasar.com/post/revealjs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://danmackinlay.name/notebook/presentation_tools.html#reveal.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://danmackinlay.name/notebook/presentation_tools.html#reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://codingclubuc3m.rbind.io/post/2019-09-24/#reveal.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://codingclubuc3m.rbind.io/post/2019-09-24/#reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Community thread:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://community.rstudio.com/t/r-presentations-for-beginners/1222&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://community.rstudio.com/t/r-presentations-for-beginners/1222&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pandoc docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://pandoc.org/MANUAL.html#background-in-reveal.js-and-beamer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pandoc.org/MANUAL.html#background-in-reveal.js-and-beamer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pandoc.org/MANUAL.html#variables-for-html-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pandoc.org/MANUAL.html#variables-for-html-slides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/revealjs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bookdown.org/yihui/rmarkdown/revealjs.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/rstudio/revealjs#r-markdown-format-for-revealjs-presentations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rstudio/revealjs#r-markdown-format-for-revealjs-presentations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This kind of research is sort of akin to bushwhacking. There is no clear trail, and you are traveling in sort of wild country. There may be lots of noise in all these channels that actually isn’t accurate, so you have to trust your own intuition some and do your own testing even more.&lt;/p&gt;
&lt;p&gt;I’ll note here that a red flag right off the bat for me is that we don’t even have revealjs tagged on 
&lt;a href=&#34;https://community.rstudio.com/search?q=revealjs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio Community&lt;/a&gt;, so we aren’t exactly advertising usage. Nevertheless, there are questions about it on there, which seem to largely go unanswered. I also didn’t find a lot of blog posts or meetup presentations on the topic. If you know the #rstats community, you know that sharing knowledge is basically baked in, so this tells you &lt;em&gt;something&lt;/em&gt; is up (but it could be messaging - the tool may still be great!).&lt;/p&gt;




&lt;h2 id=&#34;what-works&#34;&gt;What works?
  &lt;a href=&#34;#what-works&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Before reading through many of the blog posts and community forum
threads, I also actually just used the tool.&lt;/p&gt;
&lt;p&gt;Here was my minimal demo deck:&lt;/p&gt;
&lt;iframe src=&#34;https://revealing-slides.netlify.app/#/title-slide&#34; width=&#34;672&#34; height=&#34;400px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;I tried to follow the docs myself, and maintain a 
&lt;a href=&#34;https://www.trychameleon.com/blog/friction-logs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;friction log&lt;/a&gt; of what worked well and what didn’t. If I stumbled, I tried to make a mental note to actually figure out why at some point. It could be an actual bug, or it could be that my mental model is wrong, or it could be that I trusted a doc or a user’s guide and that led me astray. Whatever it is, it’s important that I track what went wrong. Here is my scratchpad of what I tried that &lt;strong&gt;did&lt;/strong&gt; work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Multi-column layout (but, a bit clunky? Have to create container first. In xaringan, this is just &lt;code&gt;.pull-left[contents...]&lt;/code&gt; and &lt;code&gt;.pull-right[contents...]&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::: {.columns} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: {.column width=&amp;#34;40%&amp;#34;} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;contents… 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: {.column width=&amp;#34;60%&amp;#34;} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;contents… 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::::
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tile view: &lt;kbd&gt;escape&lt;/kbd&gt; kbd shortcut - very cool!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Although why does tile view show all top aligned slides instead
of centered?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vertical slides: Aha you invoke vertical slides by using level 1
headers! (essentially, by adding sections). The “default” horizontal
slide layout depends on using &lt;code&gt;##&lt;/code&gt; for all slide headers - a bit of a
gotcha to folks so we’ll need to really document and teach this well&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pandoc’s docs on this:
&lt;strong&gt;Note: in reveal.js slide shows, if slide
level is 2, a two-dimensional layout will be produced, with
level-1 headings building horizontally and level-2 headings
building vertically. It is not recommended that you use deeper
nesting of section levels with reveal.js.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The option for vertical is actually nice- several customers have
mentioned to me that they like it for making flexible
presentations (i.e., if you have 5 min, you do just the
horizontal, if you have 20 you know you can go down and use the
vertical)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaker notes + &lt;code&gt;s&lt;/code&gt; kbd shortcut for speaker view- nice, awesome&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: notes 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is my note.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;   It can contain Markdown
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;   like this list 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hidden slides- nice, awesome&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## {visibility=&amp;#34;hidden&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cool layout options: 
&lt;a href=&#34;https://revealjs.com/layout/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/layout/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backgrounds for individual slides- images, transitions, all per slide, all work great (but! see the &lt;code&gt;oof&lt;/code&gt; below regarding relative vs absolute image paths on GH pages)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## CSS color bg {background=#ff0000}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Full size image bg {background=&amp;#34;background.jpeg&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Video bg {background-video=&amp;#34;background.mp4&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## A bg html page {background-iframe=&amp;#34;https://example.com&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;what-might-work-but-i-dont-know-for-sure&#34;&gt;What might work but I don’t know for sure?
  &lt;a href=&#34;#what-might-work-but-i-dont-know-for-sure&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This syntax should work to change a slide background using the three dashes as the slide separator instead of the level 2 markdown header, but does not:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- {background-color=&amp;#34;#FBD989&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[TODO]: test with updated Pandoc, file bug if still doesn&#39;t work&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How do I change syntax highlighting themes using the built-in highlight.js? 
&lt;a href=&#34;https://revealjs.com/code/#theming&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/code/#theming&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;See: 
&lt;a href=&#34;http://arm.rbind.io/slides/xaringan.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://arm.rbind.io/slides/xaringan.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NOTE: the R package we have has a YAML key for this&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These are all very nice code chunk effects- how would I use with
knitr chunks? 
&lt;a href=&#34;https://revealjs.com/code/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/code/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two column incremental?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[TODO:] test this&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Want to see slide numbers out of total, but this does not work: &lt;code&gt;slideNumber: &#39;c/t&#39;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;See: 
&lt;a href=&#34;https://revealjs.com/slide-numbers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/slide-numbers/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[TODO:] test with latest Pandoc and file issue there if can     confirm bug with reprex&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;what-needs-to-change&#34;&gt;What needs to change?
  &lt;a href=&#34;#what-needs-to-change&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Difficult to style out of the box (i.e., you are in CSS inspect
element world).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;“Creating themes seems to require you to fork reveal’s github
repo for full generality, which feels a bit weird…Either way,
in practice theming can be a rabbit hole of flex-box and
responsive media queries.” - blog post&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“Note - if you are an artist (or very focused on small visual
details), then you might want to reconsider using reveal.js.” -
blog post&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build in SASS/SCSS support&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I made my own:

&lt;a href=&#34;https://github.com/apreshill/revealing-slides/blob/main/assets/my-style.scss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/apreshill/revealing-slides/blob/main/assets/my-style.scss&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then used the sass package to compile to css:

&lt;a href=&#34;https://github.com/apreshill/revealing-slides/blob/main/assets/compile-sass.R&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/apreshill/revealing-slides/blob/main/assets/compile-sass.R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then used the css key in the YAML&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The visual editor view is disorienting (hard to see where slides start/end):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;editor.png&#34; alt=&#34;visual editor mode with reveal.js slides&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accessibility: slide tones on advance?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See: 
&lt;a href=&#34;https://pkg.garrickadenbuie.com/xaringanExtra/#/slide-tone&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.garrickadenbuie.com/xaringanExtra/#/slide-tone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/32956342/with-reveal-js-how-can-i-make-slides-change-upon-completion-of-embedded-media&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/32956342/with-reveal-js-how-can-i-make-slides-change-upon-completion-of-embedded-media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[TODO:] test out this plugin: &amp;lt;https://github.com/rajgoel/reveal.js-plugins/tree/master/audio-slideshow&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding a logo is hard, needs to be easier. See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://arm.rbind.io/slides/xaringan.html#121&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://arm.rbind.io/slides/xaringan.html#121&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://pkg.garrickadenbuie.com/xaringanExtra/#/logo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.garrickadenbuie.com/xaringanExtra/#/logo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Closed issue → solution is CSS: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/1122&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/issues/1122&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Changing the overall alignment is hard, needs to be easier (all centered by default):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/1897&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/issues/1897&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/41024596/r-markdown-slides-with-reveal-js-how-to-left-align-list-items-bullets-and-numb/41047550#41047550&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/41024596/r-markdown-slides-with-reveal-js-how-to-left-align-list-items-bullets-and-numb/41047550#41047550&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;center: false&lt;/code&gt; in the YAML, but this is only for
vertical alignment&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The default transitions look a bit dated…changing all to
“none” looks more modern&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[TODO:] change defaults?&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Transition style 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;transition: &amp;#39;slide&amp;#39; --&amp;gt; &amp;#39;none&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// none/fade/slide/convex/concave/zoom // 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Transition style for full page slide backgrounds 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;backgroundTransition: &amp;#39;fade&amp;#39; --&amp;gt; &amp;#39;none&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// none/fade/slide/convex/concave/zoom
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Good + modern built-in themes- I have zero love for any of the existing themes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A good start for a style template: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/settings.scss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/settings.scss&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[TODO:] Provide a set of built-in themes that data scientists would want to use&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customizing title slide- looks like it is YAML only? It would be nice to be able to opt for using straight up HTML in the first slide as the title
slide. This is a Pandoc principle though across slide formats.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See: 
&lt;a href=&#34;http://arm.rbind.io/slides/xaringan.html#117&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://arm.rbind.io/slides/xaringan.html#117&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/40345094/reveal-js-title-slide-override&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/40345094/reveal-js-title-slide-override&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build in shortcode for panelsets? I’m totally sold on panelsets for
slide decks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://pkg.garrickadenbuie.com/xaringanExtra/#/panelset&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.garrickadenbuie.com/xaringanExtra/#/panelset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easily use google fonts- maybe using YAML for fonts like bslib/sass package does (and does the dirty work for you to be able to work offline)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See: 
&lt;a href=&#34;https://rstudio.github.io/sass/reference/font_face.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://rstudio.github.io/sass/reference/font_face.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[TODO:] get bslib support for SASS/SCSS files in R package&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can
we make PDF exporting easier, perhaps with pagedown?

&lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/pdf-export/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can we have emoji support?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official answer is no: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/2517&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/issues/2517&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Pandoc bug? The &lt;code&gt;data-&lt;/code&gt; prefix is not required for other attributes,
but in the YAML for the title slide they are required:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title-slide-attributes&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;data-background-image&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;/img/pink-paint.jpg&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;data-background-size&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;cover&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;follow-up-in-the-future&#34;&gt;Follow-up in the future
  &lt;a href=&#34;#follow-up-in-the-future&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Live revealjs theme editor (v v v old):

&lt;a href=&#34;https://github.com/byteclubfr/uncloak&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/byteclubfr/uncloak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The menu plugin looks
interesting: 
&lt;a href=&#34;https://stackoverflow.com/a/61075371/9437012&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/a/61075371/9437012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;As does
the spotlight plugin:

&lt;a href=&#34;https://github.com/denniskniep/reveal.js-plugin-spotlight&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/denniskniep/reveal.js-plugin-spotlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Oof it looks like publishing ghpages from the project root misses files in subdirectories, note that none of my background images show up!
&lt;ul&gt;
&lt;li&gt;Note to self: use relative urls to images rather than absolute (so don’t
start with a slash if in subdirectory as the Pandoc docs led you to believe- that will generate absolute urls
that GH Pages will trip on- Netlify did not)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;my-final-answer&#34;&gt;My final answer
  &lt;a href=&#34;#my-final-answer&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So the question I started with was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Why aren’t people using reveal.js for slides with R
Markdown? What are the problems with reveal.js, and how can we fix
them?”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My answer? I think there are a few factors working against reveal.js. The most obvious is that there is a noticeable lack of community engagement around the format - so there is an enthusiasm gap there between reveal.js and R packages like xaringan. The sheer number of options for HTML-based slide output formats leads folks toward using the one they see and hear about in the wild. That often starts with brave sharers on social media like Twitter, which then trickles down into user blog posts, folks who can answer questions on community, and ultimately contributors who improve the open-source software themselves. There have been amazing community contributions around the xaringan ecosystem. Have you heard of: 
&lt;a href=&#34;https://xaringan.club/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://xaringan.club/&lt;/a&gt; (brought to you by 
&lt;a href=&#34;https://www.garrickadenbuie.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Garrick&lt;/a&gt;)?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“The first rule of xaringan club is…we talk about xaringan.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Will there be a reveal.js club? I hope so! In my research, I found a lot of things to like working with reveal.js, and some things that I do think would serve R Markdown users and especially beginners well, perhaps even better than xaringan/remark.js. But, is there room for improvement? Always &amp;#x1f609;&lt;/p&gt;
&lt;p&gt;Honestly, with slide making tools, my own experience is that I’m less enthusiastic when I feel less empowered. I feel empowered as a user when a tool lets me customize the look and layout of my slides, with some guardrails to make sure I don’t enter the deep-dark CSS labyrinth. What I want is to fall into the “pit of beauty” more quickly, instead of the “pit of ugly” after hours of trying. See this interview with Hadley Wickham about the 
&lt;a href=&#34;https://www.auckland.ac.nz/en/news/2017/12/05/problem-solving-pits-of-success.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;“pit of success”&lt;/a&gt; if you don’t get this reference! In my experience, this is what will drive some brave adopters to dip their toe into reveal.js, and ultimately what might help teams take the plunge together.&lt;/p&gt;
&lt;p&gt;So what happens next? This was just the beginning, but it is where I’m at after a few days of research and testing. I know I’ll be using it for my next slide deck so stay tuned!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Up &amp; running with blogdown in 2021</title>
      <link>http://localhost:4321/blog/2020-12-new-year-new-blogdown/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:4321/blog/2020-12-new-year-new-blogdown/</guid>
      <description>



&lt;h2 id=&#34;welcome&#34;&gt;Welcome
  &lt;a href=&#34;#welcome&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Hi! Hello! Welcome. Bienvenidos.&lt;/p&gt;
&lt;p&gt;About 3.5 years ago, I wrote my 
&lt;a href=&#34;http://localhost:4321/post/2017-06-12-up-and-running-with-blogdown/&#34;&gt;first blog post&lt;/a&gt; and published it on my first website. Since then, that single post has been viewed over 27,557 times. That may not seem like a lot to some folks, but it is to me! Even more meaningful to me, though, has been watching the launches of so many people&amp;rsquo;s personal websites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/BU5j1oVls8rXG/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;However, the process of creating and maintaining a Hugo website using blogdown was not always pain-free. Sometimes we have Hugo &amp;ldquo;improvements&amp;rdquo; to thank, other times your Hugo theme is at fault, and sometimes we could blame blogdown. Regardless of where the pain came from, there was definitely room for improvement.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/KTyJ3VPxkbDKU/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here are some great blog posts that document pretty common user experiences and frustrations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://masalmon.eu/2020/02/29/hugo-maintenance/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maëlle Salmon&amp;rsquo;s post: &lt;em&gt;What to know before you adopt Hugo/blogdown&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://drmowinckels.io/blog/2020-05-25-changing-you-blogdown-workflow/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Athanasia Mowinckel&amp;rsquo;s post: &lt;em&gt;Changing your blogdown workflow&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://clauswilke.com/blog/2020/09/08/a-blogdown-post-for-the-ages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Claus Wilke&amp;rsquo;s post: &lt;em&gt;Writing a blogdown post for the ages&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of this, combined with my own experiences teaching and using blogdown for over 3.5 years led me to&amp;hellip;my giant blogdown wishlist. I had a lot of ideas to help beginners get started, but just as important, to improve the quality of life for existing users. You can see my mega-wishlist that Yihui Xie (the blogdown conceptor and author) asked me to share with him: 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/476&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rstudio/blogdown/issues/476&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m very happy to report that our team has been working very hard to address these issues, and many others raised by users, to make blogdown easier to learn and use. Just in time for the new year, we have a new and improved release of the blogdown package for you to test. I know a lot of folks are itching to introduce themselves into online communities and conversations, so I thought it would be fun to take my original blogdown post, and trace the same process of building a Hugo website with the same theme (now named 
&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Wowchemy&amp;rdquo;&lt;/a&gt; instead of Hugo Academic- don&amp;rsquo;t get me started).&lt;/p&gt;
&lt;p&gt;So if you are feeling fearless and want to live on the bleeding edge, read on to give the development version of blogdown a spin along with me.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/42zi6wvKUbXHbzwBbD/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;




&lt;h2 id=&#34;tldr&#34;&gt;tl;dr
  &lt;a href=&#34;#tldr&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;If you already know what you are doing, this entire post can be condensed into just a few lines of code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;remotes&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;install_github&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;rstudio/blogdown&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usethis&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;create_project&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;new_site&lt;/span&gt;(theme &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;wowchemy/starter-academic&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;serve_site&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;new_post&lt;/span&gt;(title &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Hi Hugo&amp;#34;&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     ext &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;.Rmarkdown&amp;#39;&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     subdir &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usethis&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;use_git&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usethis&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;use_github&lt;/span&gt;() &lt;span style=&#34;color:#998;font-style:italic&#34;&gt;# requires a GitHub PAT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above sequence is a slightly more advanced workflow than the steps I follow below, but is fairly magical- attempt at your own risk! For everyone else, read on&amp;hellip;&lt;/p&gt;




&lt;h2 id=&#34;pre-requisites&#34;&gt;Pre-requisites
  &lt;a href=&#34;#pre-requisites&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Getting any website up and running with all the moving parts (RStudio, GitHub, Hugo, Netlify) can take a few tries. In this post, I&amp;rsquo;m passing along what works for me, and the workflow that I use when I teach Hugo website development. Everyone&amp;rsquo;s mileage may vary, though, depending on your operating system and your approach.&lt;/p&gt;
&lt;p&gt;For this blog post, I&amp;rsquo;m assuming you have basic familiarity with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R,&lt;/li&gt;
&lt;li&gt;the RStudio IDE, and&lt;/li&gt;
&lt;li&gt;GitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If that is not you, you will need to work through 
&lt;a href=&#34;http://happygitwithr.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Happy Git with R&lt;/a&gt; by Jenny Bryan et al. first, then come back here when you are ready.&lt;/p&gt;
&lt;p&gt;Since the development version of blogdown is currently only available on GitHub, you may need to setup a 
&lt;a href=&#34;https://happygitwithr.com/github-pat.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Personal Access Token&lt;/a&gt; to install it.&lt;/p&gt;
&lt;p&gt;In my original 2017 post, I mentioned that at that time, I was a new mom, and just in the process of writing all that up, I filled up my tea mug twice with ice cold water, and filled my water bottle with scalding hot water. This time around isn&amp;rsquo;t too different! Fast forward to 2020: there is a global pandemic, I&amp;rsquo;ve been under stay-at-home orders with a child under 5 years of age at home for months. So buckle up :cowboy:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/Q9vJgdNPoyKSA6APDo/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I&amp;rsquo;ve included code chunks below using the 
&lt;a href=&#34;https://rstudio.github.io/rstudioapi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rstudioapi&lt;/a&gt; package to help you navigate to the right file at the right time. Hugo sites have a dizzying and heavily nested directory structure! You&amp;rsquo;ll need to run &lt;code&gt;install.packages(&amp;quot;rstudioapi&amp;quot;)&lt;/code&gt; to use those code chunks, but you can also navigate on your own to the file you need too.
  &lt;/div&gt;
&lt;/div&gt;




&lt;h2 id=&#34;step-0-set-your-intentions&#34;&gt;Step 0: Set your intentions
  &lt;a href=&#34;#step-0-set-your-intentions&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;00-blogdown-2021.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;During workshops, I try to set aside some time at the start for folks to set their website intentions. This might feel a bit like navel-gazing, but trust me here. I know you just want to jump in and get started!&lt;/p&gt;
&lt;p&gt;Hear me out though, and don&amp;rsquo;t skim or skip this step. The process of actually building and deploying a personal site can be complicated, and it is easy to get lost in the weeds.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/l3vRbcJ60KOxd9bVu/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is very easy to run out of steam when it is time to do the most fun and important piece: dreaming about the kind of site you want to make!&lt;/p&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Do this right now! Take 10 minutes to set your website intentions&amp;mdash;grab a pen and notepad and a cup of 🍵 and read on&amp;hellip;
  &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;todo-content&#34;&gt;1. Content
  &lt;a href=&#34;#todo-content&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Hugo is made for blogs. But, in addition to a blog, the starter-academic theme provides a unique system of widgets. You can have one or many widgets on pages in your site. I like to think of widgets like 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Mr._Potato_Head&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mr. Potato Head&lt;/a&gt; where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each page is a potato head, and&lt;/li&gt;
&lt;li&gt;Each widget is a piece you could place on the potato head.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/tjGVkrPMjngt2/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Take the homepage for example, seen on the 
&lt;a href=&#34;https://academic-demo.netlify.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic demo site&lt;/a&gt;. Each band or section you see is a widget. Widgets can be stand-alone pages, or can be combined on a single page.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Multiple widget page: my 
&lt;a href=&#34;http://localhost:4321/resume/&#34;&gt;resume&lt;/a&gt; and 
&lt;a href=&#34;http://localhost:4321/about/&#34;&gt;about&lt;/a&gt; pages&lt;/li&gt;
&lt;li&gt;Single widget page: my 
&lt;a href=&#34;http://localhost:4321/projects/&#34;&gt;projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Look at the 
&lt;a href=&#34;https://academic-demo.netlify.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic demo site&lt;/a&gt; and write down some widgets you see that you like, and the ones you definitely don&amp;rsquo;t.
  &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;todo-menu&#34;&gt;2. Menu
  &lt;a href=&#34;#todo-menu&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Now that you have a sense of the content you want, how do you want a visitor to be able to explore your content? I typically recommend limiting the top navbar to 5 links max (excluding the search icon).&lt;/p&gt;
&lt;p&gt;Use some of my favorite personal sites (that do not use our theme) as inspiration too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.jason.af/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.jason.af/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.nistara.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.nistara.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://third-bit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://third-bit.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://maggieappleton.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://maggieappleton.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.drcathicks.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.drcathicks.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://amber.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://amber.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://dscott.netlify.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dscott.netlify.app/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://drmowinckels.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://drmowinckels.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Think about how the menu &amp;ldquo;prewires&amp;rdquo; you to know what to expect as you dig deeper into their site. How do you want people to get to know you online?&lt;/p&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Write down up to 5 items to appear in your upper navbar.
  &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;todo-home&#34;&gt;3. Homepage
  &lt;a href=&#34;#todo-home&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;This is the first page a visitor lands on when they find your site. Think of it like a welcome mat. Do you like a single page site where you scroll and see everything on one page? Or do you prefer a short and sweet homepage? Do you want a photo and a bio to be the first thing visitors see? What else?&lt;/p&gt;
&lt;p&gt;Here are some examples of personal websites built with the Hugo Academic theme to inspire you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://malco.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://isabella-b.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://isabella-b.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.connorrothschild.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.connorrothschild.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://silvia.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://silvia.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://maya.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://maya.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.allisonhorst.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.allisonhorst.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://juliasilge.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://juliasilge.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://desiree.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://desiree.rbind.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert alert-todo&#34;&gt;
  &lt;div&gt;
    Write down the widgets you want to see on your homepage. It can be one, or many.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;OK, keep these notes handy! We are ready to &lt;em&gt;make something.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/mXqtfNsJlKtAoyLHd4/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;




&lt;h2 id=&#34;step-1-create-repo&#34;&gt;Step 1: Create repo
  &lt;a href=&#34;#step-1-create-repo&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;01-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go online to your 
&lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; account, and create a new repository (check to initialize with a &lt;code&gt;README&lt;/code&gt; but don&amp;rsquo;t add &lt;code&gt;.gitignore&lt;/code&gt;- this will be taken care of later). For naming your repo, consider your future deployment plan:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;github-new-repo.png&#34; alt=&#34;Screenshot above: Creating a new repository in GitHub&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Netlify&lt;/strong&gt;&lt;/a&gt;. I recommend using Netlify to &lt;em&gt;both&lt;/em&gt; build and host your site. In this case, you can name the repository anything you want!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://pages.github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt;&lt;/a&gt;. I recommend Netlify over GitHub Pages for blogdown/Hugo sites. But, if you want to host your site with GitHub Pages, you should name your repository &lt;code&gt;yourgithubusername.github.io&lt;/code&gt; (so mine would have been &lt;code&gt;apreshill.github.io&lt;/code&gt;). This post won&amp;rsquo;t be able to help you with publishing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can see some of the repo names used by members of the &lt;code&gt;rbind&lt;/code&gt; organization 
&lt;a href=&#34;https://github.com/rbind/repositories&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Go to the main page of your new repository, and under the repository name, click the green &lt;strong&gt;Clone or download&lt;/strong&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose either SSH or HTTPS (if you don&amp;rsquo;t know which, choose HTTPS). Choose by clicking on the clipboard icon to copy the remote URL for your new repository. You&amp;rsquo;ll paste this text into RStudio in the next section.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;step-2-create-project&#34;&gt;Step 2: Create project
  &lt;a href=&#34;#step-2-create-project&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;02-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We just created the remote repository on GitHub. To make a local copy on our computer that we can actually work in, we&amp;rsquo;ll clone that repository into a new RStudio project. This will allow us to sync between the two locations: your remote (the one you see on github.com) and your local desktop.&lt;/p&gt;
&lt;p&gt;Open up RStudio to create a new project where your website&amp;rsquo;s files will live.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;File &amp;gt; New Project &amp;gt; Version Control &amp;gt; Git&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paste the copied URL from the previous step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be intentional about where you tell RStudio to create this new Project on your workstation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Create Project&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;step-3-create-site&#34;&gt;Step 3: Create site
  &lt;a href=&#34;#step-3-create-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;03-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The latest version of blogdown will not be available on CRAN until January 2021, but you can install the development version from GitHub with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; if (!requireNamespace(&amp;#34;remotes&amp;#34;)) install.packages(&amp;#34;remotes&amp;#34;)
&amp;gt; remotes::install_github(&amp;#34;rstudio/blogdown&amp;#34;)
Using github PAT from envvar GITHUB_PAT
Downloading GitHub repo rstudio/blogdown@master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let&amp;rsquo;s use our first blogdown function to create a website with the Hugo Wowchemy &amp;ldquo;starter-academic&amp;rdquo; project:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; library(blogdown)
&amp;gt; new_site(theme = &amp;#34;wowchemy/starter-academic&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should now see something like this. Take a moment to read through these messages - importantly, it tells you how to start and stop the server so you can preview your site. Importantly, when you come back to your project, note that you can use &lt;code&gt;blogdown::serve_site()&lt;/code&gt; or the &amp;ldquo;Serve Site&amp;rdquo; addin to preview it locally.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_hugo_start.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s select &lt;code&gt;y&lt;/code&gt; to let blogdown start a server for us.&lt;/p&gt;
&lt;p&gt;Exciting, isn&amp;rsquo;t it? Now, don&amp;rsquo;t trap your site in the RStudio Viewer pane. Let it out! Click to &amp;ldquo;Show in new window&amp;rdquo; (to the right of the &amp;#x1f9f9; icon) to preview it in a normal browser window. When you do that, you&amp;rsquo;ll be re-directed to the site&amp;rsquo;s main homepage. Let&amp;rsquo;s find our way back to the R Markdown post. Click on &lt;code&gt;Posts &amp;gt; Hello R Markdown&lt;/code&gt; to read it:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sample_post.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is what blogdown gives you- everything else in the site is given to you by Hugo and your Wowchemy Hugo theme. But this post, and your ability to see output and plots rendered with &lt;i class=&#34;fab fa-r-project&#34;&gt;&lt;/i&gt; is what blogdown adds!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;step-4-create-content&#34;&gt;Step 4: Create content
  &lt;a href=&#34;#step-4-create-content&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;04-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s use more R Markdown &amp;#x1f389;&lt;/p&gt;
&lt;p&gt;Blogdown allows you to create new two kinds of R Markdown posts that are knittable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.Rmd&lt;/code&gt; 🧶 to &lt;code&gt;.html&lt;/code&gt; or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.Rmarkdown&lt;/code&gt; 🧶 to &lt;code&gt;.markdown&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once knitted, both are then previewable in your Hugo site.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I used to agonize over which file extension to use. But now I am squarely in &lt;code&gt;.Rmarkdown&lt;/code&gt; camp with 
&lt;a href=&#34;https://masalmon.eu/2020/02/29/hugo-maintenance/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maëlle&lt;/a&gt;- I like knitting to &lt;code&gt;.markdown&lt;/code&gt; and wish this was easier in blogdown; see: 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/530&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rstudio/blogdown/issues/530&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Use the console to author a new &lt;code&gt;.Rmarkdown&lt;/code&gt; post; I&amp;rsquo;ll name my post &amp;ldquo;Hi Hugo&amp;rdquo;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; blogdown::new_post(title = &amp;#34;Hi Hugo&amp;#34;, 
                     ext = &amp;#39;.Rmarkdown&amp;#39;, 
                     subdir = &amp;#34;post&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This takes the path to where you want your post to live, relative to the &lt;code&gt;content/&lt;/code&gt; folder (so that piece of the path is assumed, rightly so!). In the Academic theme, the example site organizes blog posts into the &lt;code&gt;content/post/&lt;/code&gt; folder, but the name of this folder varies across Hugo themes.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A rule that is true 90% of the time: folders in &lt;code&gt;content/&lt;/code&gt; are singular, not plural&amp;mdash; &amp;#x2714;&amp;#xfe0f; &lt;code&gt;post&lt;/code&gt;; &amp;#x274c; &lt;code&gt;posts&lt;/code&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can add an option to your &lt;code&gt;.Rprofile&lt;/code&gt; to save these settings so you don&amp;rsquo;t have to remember them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;# if exists, opens; if not, creates new&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;config_Rprofile&lt;/span&gt;() 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then add the blogdown options to that file, save, and &lt;strong&gt;RESTART YOUR R SESSION&lt;/strong&gt; for changes to take effect:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;options(
  # to automatically serve the site on RStudio startup, set this option to TRUE
  blogdown.serve_site.startup = FALSE,
  # to disable knitting Rmd files on save, set this option to FALSE
  blogdown.knit.on_save = FALSE     &amp;lt;- change
  blogdown.author = &amp;#34;Alison Hill&amp;#34;,  &amp;lt;- add
  blogdown.ext = &amp;#34;.Rmarkdown&amp;#34;,      &amp;lt;- add
  blogdown.subdir = &amp;#34;post&amp;#34;          &amp;lt;- add
)
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Always restart your R session after editing your &lt;code&gt;.Rprofile&lt;/code&gt; for changes to take effect. Don&amp;rsquo;t forget to run &lt;code&gt;serve_site()&lt;/code&gt; after a restart.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;If you look in your &lt;strong&gt;Files&lt;/strong&gt; pane, you can see that this creates a folder with the date and the 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Clean_URL#Slug&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;slug&amp;rdquo;&lt;/a&gt; name of my post (&lt;code&gt;&amp;quot;hi-hugo&amp;quot;&lt;/code&gt;). The actual R Markdown file is named &lt;code&gt;index.Rmarkdown&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_post.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is a Hugo 
&lt;a href=&#34;http://localhost:4321/post/2019-02-21-hugo-page-bundles/&#34;&gt;page bundle&lt;/a&gt;. Each post gets its own bundle, or folder. Inside the post bundle is where all your static images, static data files like &lt;code&gt;.csv&lt;/code&gt; files should go.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;content/
├── posts
│   ├── 2021-01-01-hi-hugo
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   └── index.Rmarkdown
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the post itself, use the relative file path like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;![my-first-image](image1.jpg)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s look at the &lt;code&gt;index.Rmarkdown&lt;/code&gt;. We&amp;rsquo;ll knit this &lt;code&gt;.Rmarkdown&lt;/code&gt; to a &lt;code&gt;.markdown&lt;/code&gt; file. You may 🧶 knit 🧶 freely now in blogdown!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/iBjylURwS9N9FCl8Dl/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To knit an &lt;code&gt;.Rmarkdown&lt;/code&gt; post, you can either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the Knit button to knit to the correct output format, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the keyboard shortcut &lt;code&gt;Cmd+Shift+K&lt;/code&gt; (Mac) or &lt;code&gt;Ctrl+Shift+K&lt;/code&gt; (Windows/Linux).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After knitting, you should now see:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;content/
├── posts
│   ├── hi-hugo
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   ├── index.Rmarkdown
│   │   └── index.markdown   &amp;lt;- 🆕
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Go ahead and add an R code chunk like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;```{r}
summary(Orange)
```
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After you edit your &lt;code&gt;.Rmarkdown&lt;/code&gt; post, knit. Note that knitting automatically saves the file for you. You also can just save the file without knitting- this is good for when your code still needs work and won&amp;rsquo;t run as is.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The most important thing here is to realize that the act of knitting creates an &lt;code&gt;index.markdown&lt;/code&gt; file in the same post bundle as &lt;code&gt;index.Rmarkdown&lt;/code&gt;. Because Hugo doesn&amp;rsquo;t know R or R Markdown, The &lt;code&gt;index.markdown&lt;/code&gt; version is what then feeds into the Hugo static site generator.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Try it again! Add another R code chunk like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;```{r echo=FALSE}
library(ggplot2)
oplot &amp;lt;- ggplot(Orange, aes(x = age, 
                   y = circumference, 
                   colour = Tree)) +
  geom_point() +
  geom_line() +
  guides(colour = FALSE) +
  theme_bw()
oplot
```
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Knit, and you should see something like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;post-plot.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    Many R Markdown output options for HTML documents are not going to be possible here, like tabbed sections, floating table of contents, the &lt;code&gt;code_download&lt;/code&gt; button, etc. Also, HTML widgets are a little dicey currently.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is a single page. It is made with R Markdown, and happens to be a blog post, although you can use R Markdown to create content for any other content section too.&lt;/p&gt;
&lt;p&gt;If you want a featured image to accompany your post and show up on your listing page (the clickable list of all your posts), you&amp;rsquo;ll want to add an image with the word &lt;code&gt;featured&lt;/code&gt; in the filename:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;content/
├── posts
│   ├── hi-hugo
│   │   ├── bakers.csv
│   │   ├── image1.jpg
│   │   ├── image2.png
│   │   ├── index.Rmarkdown
│   │   ├── index.markdown   
│   │   └── featured-bakers.jpg   &amp;lt;- ➕
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;workflow&#34;&gt;Workflow
  &lt;a href=&#34;#workflow&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;My workflow in RStudio at this point (again, just viewing locally because we haven&amp;rsquo;t deployed yet) works best like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the RStudio project for the site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the Hugo server using &lt;code&gt;blogdown::serve_site()&lt;/code&gt; (only once due to the magic of &lt;em&gt;LiveReload&lt;/em&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;View site in the RStudio viewer pane, and open in a new browser window while I work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select existing files to edit using the file pane in RStudio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After making changes, save if a plain &lt;code&gt;.md&lt;/code&gt; file, or if working with an &lt;code&gt;.Rmd&lt;/code&gt; or an &lt;code&gt;.Rmarkdown&lt;/code&gt; document, &lt;code&gt;knit&lt;/code&gt; to preview! You can now use the Knit button to knit to the correct output format. You can also use the keyboard shortcut &lt;code&gt;Cmd+Shift+K&lt;/code&gt; (Mac) or &lt;code&gt;Ctrl+Shift+K&lt;/code&gt; (Windows/Linux).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The console will detect the change (it will print &lt;code&gt;Change detected, rebuilding site.&lt;/code&gt;), the viewer pane will update, and (in a few seconds) your local view in your browser will also refresh. Try to avoid hitting the refresh button in your browser.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When happy with changes, add/commit/push changes to GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Having &lt;code&gt;blogdown::serve_site&lt;/code&gt; running locally with &lt;em&gt;LiveReload&lt;/em&gt; is especially useful as you can immediately see if you have totally screwed up. For example, in editing my &lt;code&gt;about.md&lt;/code&gt; file, this error popped up in my console after making a change and I was able to fix the error right away:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Started building sites ...
ERROR 2017/06/08 16:22:34 failed to parse page metadata for home/about.md: (18, 6): missing comma
Error: Error building site: Errors reading pages: Error: failed to parse page metadata for home/about.md: (18, 6): missing comma for about.md
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;using-github&#34;&gt;Using GitHub
  &lt;a href=&#34;#using-github&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s go ahead and push our changes to GitHub. First, let&amp;rsquo;s make a &lt;code&gt;.gitignore&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;file.edit&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;.gitignore&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add this content:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.Rproj.user
.Rhistory
.RData
.Ruserdata
.DS_Store
Thumbs.db
&lt;/code&gt;&lt;/pre&gt;



&lt;h3 id=&#34;check-yourself-before-you-wreck-yourself&#34;&gt;Check yourself before you wreck yourself
  &lt;a href=&#34;#check-yourself-before-you-wreck-yourself&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s use blogdown to check this file before we do our first commit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;check_gitignore&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see something like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; check_gitignore()
― Checking .gitignore
| Checking for items to remove...
○ Nothing to see here - found no items to remove.
| Checking for items you can safely ignore...
○ Found! You have safely ignored: .DS_Store, Thumbs.db
| Checking for items to ignore if you build the site on Netlify...
● [TODO] When Netlify builds your site, you can safely add to .gitignore: public, resources
― Check complete: .gitignore
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You have a &lt;code&gt;[TODO]&lt;/code&gt; item- go ahead and add &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;resources&lt;/code&gt; on their own lines in your &lt;code&gt;.gitignore&lt;/code&gt; file. We&amp;rsquo;ll be configuring Netlify to build our site shortly, so go right ahead while the file is open.&lt;/p&gt;
&lt;p&gt;While we are at it, let&amp;rsquo;s check out our content too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;check_content&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You may notice a few pieces of content are flagged as &lt;code&gt;draft&lt;/code&gt;. This is good to know! Read up on drafts in Hugo 
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/content.html#yaml-metadata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our checks are pretty clean, so you can freely add/commit your project files to GitHub. You now should have the basic mechanics of your site working.&lt;/p&gt;




&lt;h2 id=&#34;step-5-publish-site&#34;&gt;Step 5: Publish site
  &lt;a href=&#34;#step-5-publish-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;05-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Thus far, we&amp;rsquo;ve only been previewing our site locally, then pushing the source files (but not the built site) to GitHub. This workflow works, but I assume you want to ride this bike. Let&amp;rsquo;s skip the training wheels — we are going one step more advanced by using GitHub with Netlify now.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Note that you could use &lt;code&gt;blogdown::build_site()&lt;/code&gt;, then publish the &lt;code&gt;public/&lt;/code&gt; folder using Netlify 
&lt;a href=&#34;https://app.netlify.com/drop&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;drag &amp;amp; drop&lt;/a&gt;. Watch this 
&lt;a href=&#34;../talk/2020-sharing-short-notice/&#34;&gt;webinar&lt;/a&gt; called &amp;ldquo;Sharing on Short Notice&amp;rdquo; to learn more - but this is a less advanced workflow.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To get started using Netlify for real (which has a free plan that should largely cover recreational blogging use!):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Go online to 
&lt;a href=&#34;https://www.netlify.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;Sign Up&lt;/strong&gt; button and sign up using your existing GitHub account (no need to create another account).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Log in, and select: &lt;code&gt;New site from Git &amp;gt; Continuous Deployment: GitHub&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From there, Netlify will allow you to select from your existing GitHub repositories. You&amp;rsquo;ll pick the repo you&amp;rsquo;ve been working from with &lt;code&gt;blogdown&lt;/code&gt;. Leave all settings as they are and select &lt;strong&gt;Deploy Site&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new_netlify.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When it is done, you can click on the link to your new site! And the most magical thing of all, every time you push any changes to your site to GitHub, Netlify will detect the push, re-build, then update your published site. It&amp;rsquo;s a good thing. It&amp;rsquo;s called continuous deployment, and it is the main reason to use Netlify for a blogdown site.&lt;/p&gt;
&lt;p&gt;With a new site, Netlify will deploy your site and assign you a random subdomain name of the form &lt;code&gt;random-word-12345.netlify.app&lt;/code&gt;. Mine was particularly unfortunate, with the random word &lt;code&gt;garbage-collector-janice&lt;/code&gt;. You should know that you can change this; I changed mine to &lt;code&gt;apreshill.netlify.app&lt;/code&gt;. Do this by navigating to your site on Netlify, then click on &lt;strong&gt;Settings&lt;/strong&gt;. Under &lt;strong&gt;Site information&lt;/strong&gt;, click on the &lt;em&gt;Change site name&lt;/em&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;netlify-site-name.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Whether you change your Netlify site name or use the random one, go back to your configuration file and cchange the baseurl there to match where Netlify is publishing your site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rstudioapi&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;navigateToFile&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;config.yaml&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You actually have most of the necessary wiring laid out for you already in your repo, which is why this worked. Our site has a &lt;code&gt;netlify.toml&lt;/code&gt; file, which sets us the necessary settings for letting Netlify build our site for us and then publish it. You can read more about this file 
&lt;a href=&#34;http://localhost:4321/post/2019-02-19-hugo-netlify-toml/&#34;&gt;here&lt;/a&gt;, and check it out using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;# if exists, opens; if not, creates new&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;config_netlify&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, back in your local blogdown project, let&amp;rsquo;s check this file with blogdown:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; blogdown::check_netlify()
― Checking netlify.toml...
○ Found HUGO_VERSION = 0.79.1 in [build] context of netlify.toml.
| Checking that Netlify &amp;amp; local Hugo versions match...
| Mismatch found:
  blogdown is using Hugo version (0.79.0) to build site locally.
  Netlify is using Hugo version (0.79.1) to build site.
● [TODO] Option 1: Change HUGO_VERSION = &amp;#34;0.79.0&amp;#34; in netlify.toml to match local version.
● [TODO] Option 2: Use blogdown::install_hugo(&amp;#34;0.79.1&amp;#34;) to match Netlify version, and set options(blogdown.hugo.version = &amp;#34;0.79.1&amp;#34;) in .Rprofile to pin this Hugo version.
| Checking that Netlify &amp;amp; local Hugo publish directories match...
○ Good to go - blogdown and Netlify are using the same publish directory: public
― Check complete: netlify.toml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I recommend going with &lt;code&gt;Option 1&lt;/code&gt; here, so follow that &lt;code&gt;[TODO]&lt;/code&gt; and then run the function again to get a clean check.&lt;/p&gt;
&lt;p&gt;When you are ready to deploy, commit your changes and push to GitHub! Watch as your site rebuilds &amp;#x1f389;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;To get an &lt;code&gt;*.rbind.io&lt;/code&gt; URL, follow 
&lt;a href=&#34;http://localhost:4321/post/2017-06-12-up-and-running-with-blogdown/#rbindio-domain-names&#34;&gt;these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anytime you change your subdomain name, you need to update the &lt;code&gt;baseurl&lt;/code&gt; in your &lt;code&gt;config.toml&lt;/code&gt; file (so I changed mine to baseurl = &amp;ldquo;
&lt;a href=&#34;https://apreshill.netlify.com/%22%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://apreshill.netlify.com/&#34;)&lt;/a&gt;.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;h2 id=&#34;step-6-sculpt-site&#34;&gt;Step 6: Sculpt site
  &lt;a href=&#34;#step-6-sculpt-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;06-blogdown-2021.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, we&amp;rsquo;ll leave blogdown and R Markdown behind. We&amp;rsquo;ll just be using Hugo and Wowchemy (I think it is said like alchemy? Why??) to build your personal website.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start by running another blogdown check to &lt;code&gt;check_hugo()&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; blogdown::check_hugo()
― Checking Hugo
| Checking Hugo version...
○ Found 4 versions of Hugo. You are using Hugo 0.79.0.
| Checking .Rprofile for Hugo version used by blogdown...
○ blogdown is using Hugo 0.79.0 to build site locally.
● [TODO] Also run blogdown::check_netlify() to check for possible problems with Hugo and Netlify.
― Check complete: Hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All set! We&amp;rsquo;ve already checked out our Netlify set-up &amp;#x2714;&amp;#xfe0f; If you wish to clean up your local Hugo installations, check out:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;remove_hugo&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h3 id=&#34;configure-your-site&#34;&gt;Configure your site
  &lt;a href=&#34;#configure-your-site&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s start with the last thing you typically do to your home- decorate.&lt;/p&gt;
&lt;p&gt;Open up the file &lt;code&gt;config/_default/params.toml&lt;/code&gt;. Play with any of these configurations, but especially fonts/themes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rstudioapi&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;navigateToFile&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;config/_default/params.toml&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    If you want deeper customization of the styling, you can create a new CSS file &lt;code&gt;assets/scss/custom.scss&lt;/code&gt; and use it to override any existing styles. You can see mine 
&lt;a href=&#34;https://github.com/rbind/apreshill/blob/master/assets/scss/custom.scss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;; heavily borrowing from my former intern 
&lt;a href=&#34;https://desiree.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Desirée De Leon&lt;/a&gt;!
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;While you are at it, edit the other configuration files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can also view 
&lt;a href=&#34;https://github.com/rbind/apreshill/blob/master/config.toml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my &lt;code&gt;config.toml&lt;/code&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Remember our 
&lt;a href=&#34;#todo-menu&#34;&gt;menu intentions&lt;/a&gt;? Go ahead and edit those too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rstudioapi&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;navigateToFile&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;config/_default/menus.toml&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s run a blogdown check on the configuration file before we leave:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; blogdown::check_config()
― Checking config.yaml
| Checking &amp;#34;baseURL&amp;#34; setting for Hugo...
○ Found baseURL = &amp;#34;https://silly-dubinsky-de5482.netlify.app&amp;#34;; nothing to do here!
| Checking &amp;#34;ignoreFiles&amp;#34; setting for Hugo...
● [TODO] Add these items to the &amp;#34;ignoreFiles&amp;#34; setting: &amp;#34;\\.Rmd$&amp;#34;, &amp;#34;\\.Rmarkdown$&amp;#34;, &amp;#34;\\.knit\\.md$&amp;#34;, &amp;#34;\\.utf8\\.md$&amp;#34;
| Checking setting for Hugo&amp;#39;s Markdown renderer...
○ All set! Found the &amp;#34;unsafe&amp;#34; setting for goldmark.
― Check complete: config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Looks like we have a few &lt;code&gt;[TODO]&lt;/code&gt; items to add to our &lt;code&gt;config.yaml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rstudioapi&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;navigateToFile&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;config.yaml&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;15&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;h3 id=&#34;goodbye-nelson-b&#34;&gt;Goodbye Nelson B.
  &lt;a href=&#34;#goodbye-nelson-b&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s say goodbye to 
&lt;a href=&#34;https://themes.gohugo.io/theme/academic/#about&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nelson Bighetti&lt;/a&gt;. Everything in this single markdown file populates what is called the &lt;code&gt;about&lt;/code&gt; widget; a customized one looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;about.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Find and open the file &lt;code&gt;content/authors/admin/_index.md&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rstudioapi&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;navigateToFile&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;content/authors/admin/_index.md&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Edit the YAML metadata to change:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The 
&lt;a href=&#34;https://wowchemy.com/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons&lt;/a&gt; and where they link to&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your current role and organization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your interests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your education&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The text under the YAML is your bio; you can use markdown here. Add an &lt;code&gt;avatar.jpg&lt;/code&gt; file too (it &lt;em&gt;must&lt;/em&gt; be named this) to the same folder.&lt;/p&gt;




&lt;h3 id=&#34;prune-widgets&#34;&gt;Prune widgets
  &lt;a href=&#34;#prune-widgets&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;Remember how we started with thinking about your 
&lt;a href=&#34;#todo-content&#34;&gt;content&lt;/a&gt;? We are ready to prune out some of our unwanted widgets.&lt;/p&gt;
&lt;p&gt;Recall that on the 
&lt;a href=&#34;https://academic-demo.netlify.app/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic demo site&lt;/a&gt;, the entire home page is filled with widgets! The default example site is the exact same as the demo. It sets almost every available widget to &lt;strong&gt;active&lt;/strong&gt; to show you the range of what you could do.&lt;/p&gt;
&lt;p&gt;Deactivating the widgets you don&amp;rsquo;t need and only activating the ones you want will help you avoid having your home page feel like the 💀 &amp;ldquo;scroll of death,&amp;rdquo; as my friend 
&lt;a href=&#34;https://twitter.com/jackiewirz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jackie Wirz&lt;/a&gt; called it.&lt;/p&gt;
&lt;p&gt;Remember my 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Mr._Potato_Head&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mr. Potato Head&lt;/a&gt; analogy? The home page is your most prominent potato, and the widgets are all the pieces you could use.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/305jKnp2ErJK0/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Each widget you see is a &lt;code&gt;*.md&lt;/code&gt; file in the &lt;code&gt;content/home/&lt;/code&gt; folder. The metadata at the top helps you configure each widget; namely whether it is &lt;code&gt;active&lt;/code&gt; (true or false) and the widgets &lt;code&gt;weight&lt;/code&gt; (ordering, actual numbers doesn&amp;rsquo;t matter- only relative to the other weights).&lt;/p&gt;
&lt;p&gt;For example, to turn off the hero widget, use this code in your console and set &lt;code&gt;active = false&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rstudioapi&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;navigateToFile&lt;/span&gt;(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;content/home/hero.md&amp;#34;&lt;/span&gt;, line &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;, column &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Take about 10 minutes about try out turning widgets off and on, and changing their order to see what you like!&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can also delete a widget file. You can always recover &lt;code&gt;*.md&lt;/code&gt; widget files by going into your &lt;code&gt;themes/hugo-academic/exampleSite/content/home/&lt;/code&gt; folder.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;For my own site, I use 4 main home page widgets:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href=&#34;http://localhost:4321/#about&#34;&gt;&lt;em&gt;about&lt;/em&gt;&lt;/a&gt; (photo / icons / bio / interests / education)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://localhost:4321/#slider&#34;&gt;&lt;em&gt;slider&lt;/em&gt;&lt;/a&gt; (used to showcase some feedback from my workshops)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://localhost:4321/#posts&#34;&gt;&lt;em&gt;posts&lt;/em&gt;&lt;/a&gt; (set to show only the most recent)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://localhost:4321/#talks&#34;&gt;&lt;em&gt;talks&lt;/em&gt;&lt;/a&gt; (set to show only the most recent)&lt;/li&gt;
&lt;/ol&gt;




&lt;h3 id=&#34;transplant-widgets&#34;&gt;Transplant widgets
  &lt;a href=&#34;#transplant-widgets&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;If you opted for a more streamlined home page with fewer widgets, you may experience &lt;em&gt;widget pruning regret&lt;/em&gt;. Many are very useful, and you may wish to use widgets on &lt;em&gt;other&lt;/em&gt; pages that are not the home page. In this theme, this is possible! Even if you turn off a widget on the home page, you can create what is called a widget page and add or even combine widgets there. I make heavy use of widget pages in my own site. Here are the steps (following the 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-widget-page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docs&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a new folder in &lt;code&gt;content/&lt;/code&gt;; let&amp;rsquo;s call it &lt;code&gt;resume&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside &lt;code&gt;content/resume/&lt;/code&gt;, add a file named &lt;code&gt;index.md&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Populate &lt;code&gt;content/resume/index.md&lt;/code&gt; with a YAML, like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;summary&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;More about my work experience&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Resume&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;type&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;widget_page&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The very critical line here is the &lt;code&gt;type: widget_page&lt;/code&gt;&amp;mdash;this sets you up to now copy over widgets from &lt;code&gt;content/home/&lt;/code&gt; in this new folder.
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;Copy the widget &lt;code&gt;*.md&lt;/code&gt; files you&amp;rsquo;d like to use into this &lt;code&gt;content/resume/&lt;/code&gt; folder. Edit their metadata (weights, other info), and be sure to set &lt;code&gt;active = true&lt;/code&gt;. For my own resume, I copied the &lt;em&gt;experience&lt;/em&gt; and &lt;em&gt;accomplishments&lt;/em&gt; widgets over.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to access this new widget page from your top navbar, open up your &lt;code&gt;config/_default/menus.toml&lt;/code&gt; and add it there, like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[[main]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  name = &lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Resume&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  url = &lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;/resume&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  weight = &lt;span style=&#34;color:#099&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can link to any specific widget by taking your baseurl and appending &lt;code&gt;/#{name-of-widget}&lt;/code&gt;, so &lt;code&gt;/#slider&lt;/code&gt; links to 
&lt;a href=&#34;http://localhost:4321/#slider&#34;&gt;&lt;em&gt;my homepage slider&lt;/em&gt;&lt;/a&gt;. And &lt;code&gt;/resume/#accomplishments&lt;/code&gt; links to 
&lt;a href=&#34;http://localhost:4321/resume/#accomplishments&#34;&gt;&lt;em&gt;my honors &amp;amp; awards&lt;/em&gt;&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s run one final check, which wraps all 5 checking functions we&amp;rsquo;ve used so far into a single final checklist:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; blogdown::check_site()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is immensely comforting to me; read more about these new checking functions 
&lt;a href=&#34;http://localhost:4321/post/2020-12-27-blogdown-checks/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/j1zW1Ng86MV78tRLOo/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;




&lt;h2 id=&#34;we-made-it&#34;&gt;We made it!
  &lt;a href=&#34;#we-made-it&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;At this point, you should be up and running with &lt;code&gt;blogdown&lt;/code&gt;, GitHub, and Netlify. You now have the scaffold up and ready for your ideas, your style, and your voice. If you made it this far, please share your site- I&amp;rsquo;d love to see it!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/1xNDlJsL1ntZZqm7pn/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>


