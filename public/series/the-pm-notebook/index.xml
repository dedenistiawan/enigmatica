<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The PM Notebook on Deden Istiawan</title>
    <link>http://localhost:4321/series/the-pm-notebook/</link>
    <description>Recent content in The PM Notebook on Deden Istiawan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:4321/series/the-pm-notebook/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>We don&#39;t talk about Quarto</title>
      <link>http://localhost:4321/blog/2022-04-we-dont-talk-about-quarto/</link>
      <pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:4321/blog/2022-04-we-dont-talk-about-quarto/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thumbnail image from the 
&lt;a href=&#34;https://d23.com/why-everyone-is-talking-about-bruno-from-encanto/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Official Disney Fan Club
website&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2 id=&#34;background&#34;&gt;Background
  &lt;a href=&#34;#background&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Early last year, I was busily checking 
&lt;a href=&#34;https://quarto.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quarto&lt;/a&gt;,
and totally terrified of checking Twitter. Seriously, I held my breath
every time. It. Was. Not. Ready. It was changing fast and breaking fast.
Everyday I was seeing the GitHub stars slowly creeping up, and I was
nervous. And we had all agreed on our team that &lt;em&gt;&amp;ldquo;We don&amp;rsquo;t talk about
Quarto&amp;rdquo;&lt;/em&gt; on the outside (this was
pre-
&lt;a href=&#34;https://en.wikipedia.org/wiki/Encanto_%28film%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Encanto&lt;/a&gt;). That means
not a single one of us were tweeting or blogging about it, or even at
that point trying to teach it to anyone &amp;mdash; yet.&lt;/p&gt;
&lt;p&gt;But, things started easing up. By the time summer internship positions
at RStudio 
&lt;a href=&#34;https://www.rstudio.com/blog/summer-internship-2021/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;were
announced&lt;/a&gt;, I was
excited to have reserved a slot for our first Quarto intern, who would
be tasked with working with myself, 
&lt;a href=&#34;https://github.com/jjallaire&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JJ
Allaire&lt;/a&gt;, and 
&lt;a href=&#34;https://github.com/dragonstyle&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Charles
Teague&lt;/a&gt; to help get the Quarto docs off
the ground. We brought 
&lt;a href=&#34;https://pommevilla.rbind.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Paul Villanueva&lt;/a&gt;
on in one of the best hiring decisions I&amp;rsquo;ve made, and he ended up doing
&lt;em&gt;so much more&lt;/em&gt; than just docs! By August 2021, I had convinced Paul to
join me as a TA to teach the first public Quarto workshop for the
R/Medicine. And I honestly felt comfortable teaching Quarto then &amp;mdash; it
felt like it was time. Luckily, the Quarto team had stabilized releases
of Quarto in August before the workshop, and we were able to spin up a
custom RStudio Cloud environment to use a preview release of the RStudio
IDE, and we were off!&lt;/p&gt;
&lt;p&gt;Fast forward to now, and 
&lt;a href=&#34;https://www.nature.com/articles/d41586-022-00563-z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it looks like we are
talking&lt;/a&gt; about
Quarto. I am &amp;gt;6 months from my time at RStudio and I am writing a book
with the amazing 
&lt;a href=&#34;https://github.com/rich-iannone&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rich Iannone&lt;/a&gt; about
doing data science with R and Quarto, in a Quarto book, and I&amp;rsquo;ve built
an internal knowledge repository for my IBM team with Quarto (these are
not R or RStudio users!). So in this post, I thought I&amp;rsquo;d finally share
my notes to myself after testing and teaching Quarto, and now as a user
and enabler.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://media.giphy.com/media/ievgCulkRxHoVBlkwH/giphy.gif&#34; alt=&#34;Mirabel sliding down the stairs in Encanto&#34; /&gt;
&lt;figcaption aria-hidden=&#34;true&#34;&gt;Mirabel sliding down the stairs in
Encanto&lt;/figcaption&gt;
&lt;/figure&gt;




&lt;h2 id=&#34;what-actually-is-quarto&#34;&gt;What actually is Quarto?
  &lt;a href=&#34;#what-actually-is-quarto&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So thanks for the blog post Alison, but what actually is Quarto?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/HG6FHWzOJQiWvNTPjh/giphy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;That is a great question. Four things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is a way to render plain text source files that contain code
written in Python, R, or Observable.
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you want to use Python, you don&amp;rsquo;t need to install R or
RStudio.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to use R, you don&amp;rsquo;t have to install Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to use Observable, you just can in a Quarto document
or project.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In any language, when you render, you execute the code and include
plots, tables, and other results in your output woven together with
narrative text. So it is still &amp;ldquo;literate programming.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;When you render, you can export to over 40 different output formats,
all enabled by 
&lt;a href=&#34;https://pandoc.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pandoc&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Quarto adds functionality on top of Pandoc&amp;rsquo;s markdown language, and
the rest of this post will give you some pointers to these features.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Obviously, if you are already an R Markdown user, this will sound pretty
familiar but maybe a &lt;em&gt;shade&lt;/em&gt; different &amp;mdash; yet the software itself is a
completely new incantation designed from the bottom up.&lt;/p&gt;




&lt;h2 id=&#34;what-youll-need-to-know&#34;&gt;What you&amp;rsquo;ll need to know
  &lt;a href=&#34;#what-youll-need-to-know&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Quarto is actually a separate installation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;What to do?&lt;/strong&gt; Follow 
&lt;a href=&#34;https://quarto.org/docs/get-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Step
1&lt;/a&gt; to download Quarto for
your OS. I do this now regularly about once a week to make sure
I&amp;rsquo;m getting the latest goodies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is also an 
&lt;a href=&#34;https://cran.r-project.org/web/packages/quarto/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R
package&lt;/a&gt;,
which will allow you to render at the command line if you aren&amp;rsquo;t
an RStudio IDE/button clicking person, but you could also use
the terminal, which is what I do.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quarto works within the RStudio IDE.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;What to do?&lt;/strong&gt; Download the latest RStudio IDE release from
this link:

&lt;a href=&#34;https://quarto.org/docs/get-started/hello/rstudio.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://quarto.org/docs/get-started/hello/rstudio.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It has actually worked inside the RStudio IDE for almost a year.
It was previously supported only in the

&lt;a href=&#34;https://dailies.rstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dailies&lt;/a&gt; (which are honestly
low-risk to download and use!). But nowadays it works with the
latest official released version of the RStudio IDE. I still
update my RStudio version to the latest daily whenever I
remember to update Quarto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It also works in 
&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VSCode&lt;/a&gt;; see
&lt;strong&gt;Step 2&lt;/strong&gt; 
&lt;a href=&#34;https://quarto.org/docs/get-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The RStudio IDE&amp;rsquo;s 
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual R Markdown
Editor&lt;/a&gt; was in
actuality the first &amp;ldquo;shots fired&amp;rdquo; from Quarto. The

&lt;a href=&#34;https://www.rstudio.com/blog/rstudio-v1-4-preview-visual-markdown-editing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;announcement&lt;/a&gt;
about the Editor was published 2020/09/30, and the 
&lt;a href=&#34;https://github.com/quarto-dev/quarto-cli/commit/3df555e2ce751ff98a5f0f2e7cd44b45e2dfd60c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;first Quarto
commit&lt;/a&gt;
was only 5 days before on 2020/09/25.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fun fact:&lt;/strong&gt; I forgot to tell our first Quarto intern, Paul,
about the visual editor until about 4 weeks into his
internship&amp;mdash; and it totally changed his outlook, even as an
experienced Markdown user. So don&amp;rsquo;t sleep on the 
&lt;a href=&#34;https://quarto.org/docs/visual-editor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;visual
editor&lt;/a&gt; when teaching
and using Quarto. In particular, don&amp;rsquo;t miss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/content.html#editing-tables&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Easy editing/formatting of Markdown
tables&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy/paste from Google docs (did you know this? Literally
just copy any formatted text from Google docs and paste it
into the visual editor)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/technical.html#citations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Citations&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/options.html#insert-anything&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The &amp;ldquo;insert anything&amp;rdquo; keyboard
shortcut&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/visual-editor/content.html#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emojis
🥰&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-youll-like&#34;&gt;What you&amp;rsquo;ll like
  &lt;a href=&#34;#what-youll-like&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Across &lt;em&gt;all&lt;/em&gt; formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Two column (and more) 
&lt;a href=&#34;https://quarto.org/docs/authoring/figures.html#complex-layouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;flexible content
layouts&lt;/a&gt;
for displaying images, code, text, tables, plots, anything. This to
me was the &amp;ldquo;one killer feature&amp;rdquo; when JJ first started showing me
regular demos &amp;mdash; I was floored. While

&lt;a href=&#34;https://patchwork.data-imaginist.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;patchwork&lt;/strong&gt;&lt;/a&gt; can get you
pretty far, this allows for literally anything (including just blank
space) to be in any position, making it a layout swiss army knife.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/execution-options.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Global chunk
options&lt;/a&gt;
set in your YAML using the &lt;code&gt;execute&lt;/code&gt; key (no more 
&lt;a href=&#34;https://apreshill.github.io/rmd4cdc/#112&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;knitr&lt;/strong&gt; setup
chunk&lt;/a&gt;!). See all
supported chunk options (that go beyond &lt;strong&gt;knitr&lt;/strong&gt; ones)

&lt;a href=&#34;https://quarto.org/docs/reference/cells/cells-knitr.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;We don&amp;#39;t talk about Quarto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;subtitle&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Until now!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;execute&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;echo&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instead of:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| label: setup
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| include: false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;knitr::opts_chunk$set(echo = FALSE)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/execution-options.html#fenced-echo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Easier verbatim
chunks&lt;/a&gt;
using &lt;code&gt;echo: fenced&lt;/code&gt; as a code chunk option when you want to &lt;em&gt;show
and execute&lt;/em&gt; and double curly braces like &lt;code&gt;{r}&lt;/code&gt; for &lt;em&gt;show and
don&amp;rsquo;t execute&lt;/em&gt; (this was also

&lt;a href=&#34;https://github.com/yihui/knitr/issues/2040&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;improved&lt;/a&gt; in &lt;strong&gt;knitr&lt;/strong&gt;
too recently).&lt;/p&gt;
&lt;p&gt;For example, in the first chunk, I am using this chunk option here
(invisibly) to show a chunk where I am suppressing the results
printing:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| results: hide
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;1 + 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| results: show
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;1 + 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the chunk just above, I would allow the results to be shown, but
because I used &lt;code&gt;{r}&lt;/code&gt; as the chunk engine it isn&amp;rsquo;t evaluated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/r.html#chunk-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chunk
options&lt;/a&gt;
as YAML with the special hashpipe &lt;code&gt;#|&lt;/code&gt; (great for 
&lt;a href=&#34;https://www.rstudio.com/blog/knitr-fig-alt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;longish alt
text&lt;/a&gt;) (note that
Quarto also added a way to 
&lt;a href=&#34;https://quarto.org/docs/authoring/figures.html#alt-text&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;add alt
text&lt;/a&gt; for
Markdown inserted images, thanks to 
&lt;a href=&#34;https://github.com/quarto-dev/quarto-web/issues/20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Silvia
Canelon&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```{r}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| label: penguin-plot
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| fig-alt: &amp;#34;Scatterplot of flipper length by bill length of 3 penguin species, where we show penguins with bigger flippers have bigger bills.&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;#| warning: false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#999&#34;&gt;&lt;/span&gt;library(palmerpenguins)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;library(ggplot2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ggplot(data = penguins, aes(x = flipper_length_mm,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            y = bill_length_mm,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            color = species)) +
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  geom_point(aes(shape = species), alpha = 0.8) +
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  scale_color_manual(values = c(&amp;#34;darkorange&amp;#34;,&amp;#34;purple&amp;#34;,&amp;#34;cyan4&amp;#34;)) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;```
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;img src=&#34;index.markdown_strict_files/figure-markdown_strict/penguin-plot-1.png&#34; data-fig-alt=&#34;Scatterplot of flipper length by bill length of 3 penguin species, where we show penguins with bigger flippers have bigger bills.&#34; width=&#34;768&#34; /&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Universal

&lt;a href=&#34;https://quarto.org/docs/authoring/cross-references.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cross-referencing&lt;/a&gt;
(
&lt;a href=&#34;https://pkgs.rstudio.com/bookdown/reference/index.html#single-document-output-formats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;no more &lt;code&gt;bookdown::html_document2()&lt;/code&gt;,
etc.&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/computations/parameters.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parameters&lt;/a&gt;
(side note: here is the first &lt;strong&gt;rmarkdown&lt;/strong&gt;

&lt;a href=&#34;https://github.com/rstudio/rmarkdown/issues/33&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; from 2014
that 
&lt;a href=&#34;https://themockup.blog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tom Mock&lt;/a&gt; and I found where the idea
for parameters was &amp;ldquo;born&amp;rdquo; 👶)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, if you are anything like me and your heart belongs to HTML
output&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SUBFOLDERS for projects (praise be). Yes you can have a website or
book or any other multi-file Quarto project and render content in
even deeply nested subdirectories. Rejoice!&lt;/p&gt;
&lt;p&gt;To put in your final product, let your heart decide- you can either

&lt;a href=&#34;https://quarto.org/docs/books/book-structure.html#parts-appendices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;list as chapters or as
parts&lt;/a&gt;
(similar to &lt;strong&gt;bookdown&lt;/strong&gt;) or use 
&lt;a href=&#34;https://quarto.org/docs/websites/website-listings.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;listing
pages&lt;/a&gt; (like
with &lt;strong&gt;distill&lt;/strong&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built-in site

&lt;a href=&#34;https://quarto.org/docs/websites/website-navigation.html#site-search&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;search&lt;/a&gt;
(enabled by default for books and websites). Can also be

&lt;a href=&#34;https://quarto.org/docs/websites/website-search.html#search-appearance&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tweaked&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Batteries included&amp;rdquo; HTML features across single documents and
projects (like HTML books, websites, etc). This may be a RIP to the
wonderful 
&lt;a href=&#34;https://holtzy.github.io/Pimp-my-rmd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Pimp my Rmd&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Here are just a few features that were available in some but not
all R packages with &lt;code&gt;.Rmd&lt;/code&gt; ▶️ HTML output formats: 
&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#folding-code&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code
folding&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#copy-button&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;copy/paste
chunks&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/authoring/callouts.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;callout
blocks&lt;/a&gt;, 
&lt;a href=&#34;https://quarto.org/docs/output-formats/html-basics.html#table-of-contents&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TOC
on the
side&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#code-linking&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code
linking&lt;/a&gt;
via 
&lt;a href=&#34;https://downlit.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;downlit&lt;/a&gt; (previously only
available in 
&lt;a href=&#34;https://pkgdown.r-lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pkgdown&lt;/a&gt;),

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-basics.html#tabsets&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tabsets&lt;/a&gt;,

&lt;a href=&#34;https://quarto.org/docs/output-formats/html-basics.html#anchor-sections&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;anchored
headings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://quarto.org/docs/output-formats/html-code.html#code-tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Show
source&lt;/a&gt;
to anyone viewing your HTML output (this was previously only
possible with &lt;code&gt;rmarkdown::html_document()&lt;/code&gt; - 
&lt;a href=&#34;https://twitter.com/apreshill/status/1108925218850893832?lang=en&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my
tweet&lt;/a&gt;
from when I first discovered this output option!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compatibility with

&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;/
&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogdown&lt;/a&gt;.
This post is a &lt;code&gt;.qmd&lt;/code&gt; file with &lt;code&gt;format: hugo&lt;/code&gt; 
&lt;a href=&#34;https://quarto.org/docs/output-formats/hugo.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rendered with
Quarto&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;We don&amp;#39;t talk about Quarto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;subtitle&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Until now!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;format&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;hugo&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is nothing stopping you from using Quarto to render individual
posts, then blogdown to use Hugo, or just use Hugo from command
line. The Hugo-specific flavor of Markdown
(
&lt;a href=&#34;https://gohugo.io/getting-started/configuration-markup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;goldmark&lt;/a&gt;)
is also 
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing/markdown.html#hugo-markdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;supported by the visual
editor&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-youll-stumble-on&#34;&gt;What you&amp;rsquo;ll stumble on
  &lt;a href=&#34;#what-youll-stumble-on&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chunk options as YAML&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;#| fig-alt: &amp;#34;Scatterplot of flipper length by bill length of 3 penguin species, where we show penguins with bigger flippers have bigger bills.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;#| echo: false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;#| warning: false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;I always forgot the symbol, which is &lt;code&gt;#|&lt;/code&gt; (read: the hashpipe).
If you also cannot remember this, channel your 90s kid and enjoy
this Weezer flashback:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
    
        
        &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
          &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube-nocookie.com/embed/_9BGLtqqkVI?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;
          &gt;&lt;/iframe&gt;
        &lt;/div&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No equal sign, use a colon instead (i.e., &lt;code&gt;comment: &#39;&#39;&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the value is &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;, use lower case! (no more
screaming booleans!) 😱 So &lt;code&gt;echo: false&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To render to a specific format, use the &lt;code&gt;format&lt;/code&gt; YAML key (instead
of &lt;code&gt;output&lt;/code&gt;)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;We don&amp;#39;t talk about Quarto&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;subtitle&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;Until now!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;format&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;html&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;kebab-case&lt;/code&gt; 🍡 for all YAML keys &lt;em&gt;and&lt;/em&gt; to delimit
figure/layout/code chunk options instead of &amp;hellip; what we had before.&lt;/p&gt;
&lt;p&gt;This will be confusing at first because your &lt;strong&gt;knitr&lt;/strong&gt; chunk options
won&amp;rsquo;t match the package documentation. See

&lt;a href=&#34;https://github.com/quarto-dev/quarto-cli/pull/83&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for the
change (Quarto will auto-convert &lt;code&gt;fig.alt&lt;/code&gt; for example to &lt;code&gt;fig-alt&lt;/code&gt;,
but still, you or someone you teach might be confused by this).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You&amp;rsquo;ll be rendering as your verb, not knitting 🧶 but you&amp;rsquo;ll still
be using the &lt;strong&gt;knitr&lt;/strong&gt; package as your

&lt;a href=&#34;https://quarto.org/docs/tools/rstudio.html#knitr-engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;engine&lt;/a&gt; if
you want to use R instead of Python code chunks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This also means to watch &lt;strong&gt;knitr&lt;/strong&gt; for news! 
&lt;a href=&#34;https://github.com/yihui/knitr/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Follow releases
carefully&lt;/a&gt;&amp;mdash; they will
still matter.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For projects like books, websites, blogs, &lt;code&gt;quarto render&lt;/code&gt; vs
&lt;code&gt;quarto preview&lt;/code&gt;. See docs

&lt;a href=&#34;https://quarto.org/docs/websites/#workflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Not sure I have
advice at this point, but do read this bit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that development server updates do not cause an update to the
final site output. Consequently, you should always &lt;code&gt;quarto render&lt;/code&gt;
your site before deploying it, even if you have already previewed
the changes with the development server [with &lt;code&gt;quarto preview&lt;/code&gt;].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-youll-miss-for-now&#34;&gt;What you&amp;rsquo;ll miss (for now)
  &lt;a href=&#34;#what-youll-miss-for-now&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Defining your own format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Making and bundling templates that are easily shareable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Xaringan and remark.js for slides. This particular package and
flavor of markdown was 
&lt;a href=&#34;https://github.com/yihui/xaringan/issues/300&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;never supported in the visual
editor&lt;/a&gt; because it is
not a Pandoc-defined output format (the visual editor is specific to
Pandoc-flavored markdown). So for HTML slides in Quarto,

&lt;a href=&#34;https://quarto.org/docs/reference/formats/presentations/revealjs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reveal.js&lt;/a&gt;
is where it is at. I had a 
&lt;a href=&#34;../../../..%5cblog/2021-07-revealing-research/&#34;&gt;post&lt;/a&gt;
about doing that research too (actually all my testing at that time
was in Quarto!).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;what-you-probably-wont-miss&#34;&gt;What you (probably) won&amp;rsquo;t miss
  &lt;a href=&#34;#what-you-probably-wont-miss&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;All the packages, each one working &lt;em&gt;slightly&lt;/em&gt; different than the ones
you had already used. Essentially your experience trying to figure out
to work the shower everytime you go to a new hotel, but for each package
in the R Markdown ecosystem:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-dnt=&#34;true&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Every dang hotel I&amp;#39;ve stayed in. &lt;a href=&#34;https://t.co/xPb7PdwG2f&#34;&gt;pic.twitter.com/xPb7PdwG2f&lt;/a&gt;&lt;/p&gt;&amp;mdash; Keith Humphreys (@KeithNHumphreys) &lt;a href=&#34;https://twitter.com/KeithNHumphreys/status/1459606451467390976?ref_src=twsrc%5Etfw&#34;&gt;November 13, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are on my blog, you are probably an R Markdown lover. As well you
should be. As am I. But who among us has not chased their own tail for
hours trying to figure out why one YAML key works over &lt;em&gt;here&lt;/em&gt; but not
over &lt;em&gt;there&lt;/em&gt;. Or perhaps you simply lacked the wherewithall to branch
out into the various extension packages because you sensed a rabbit hole
ahead. Or maybe you were a person who filed or upvoted GitHub issues
begging RStudio folks to just give you tabsets for

&lt;a href=&#34;https://github.com/rstudio/distill/issues/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;every&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/429&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;single&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/69&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;html-based&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/bookdown/issues/1219&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;output&lt;/a&gt;

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/175&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;format&lt;/a&gt;. You probably
will not miss this.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;This one screwed me up so bad, I actually tried to go back to
&lt;strong&gt;rmarkdown&lt;/strong&gt; at one point and couldn&amp;rsquo;t figure out why I couldn&amp;rsquo;t
knit to &lt;code&gt;output_format: html_document&lt;/code&gt; 🤦🏻&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Revealing research</title>
      <link>http://localhost:4321/blog/2021-07-revealing-research/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:4321/blog/2021-07-revealing-research/</guid>
      <description>&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/clipboard/clipboard.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/shareon/shareon.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/shareon/shareon.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/xaringanExtra-shareagain/shareagain.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/xaringanExtra-shareagain/shareagain.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;http://localhost:4321/blog/2021-07-revealing-research/index_files/fitvids/fitvids.min.js&#34;&gt;&lt;/script&gt;




&lt;h2 id=&#34;background&#34;&gt;Background
  &lt;a href=&#34;#background&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Lately, one of the most exciting things you can say to me (at work) is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Why aren’t people using X? What are the problems with X, and how can
we fix them?”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sometimes, I know these answers already by heart,
because I have lived and breathed X. This is how blogdown was for me -

&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/476&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;I felt very tuned in to the usability problems
there&lt;/a&gt;, and had 
&lt;a href=&#34;https://github.com/rstudio/blogdown/issues/525&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;good
ideas for how to resolve
them&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other times, I have not used X (yet!). This happened to me recently when
I was asked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Why aren’t people using reveal.js for slides with R
Markdown? What are the problems with reveal.js, and how can we fix
them?”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What is reveal.js? Here is a demo deck:&lt;/p&gt;
&lt;iframe src=&#34;https://revealjs.com/demo/&#34; width=&#34;672&#34; height=&#34;400px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;It’s possible you’ve heard or seen reveal.js before - and it didn’t look this good! It may have looked more like this:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;revealjs-1.png&#34; alt=&#34;Two sample slides created from the revealjs package.&#34; width=&#34;49%&#34; /&gt;&lt;img src=&#34;revealjs-2.png&#34; alt=&#34;Two sample slides created from the revealjs package.&#34; width=&#34;49%&#34; /&gt;&lt;/p&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Two sample slides created from the revealjs package.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This…never quite worked for me. If you know my work, you know I’m a pretty big fan of the

&lt;a href=&#34;https://github.com/yihui/xaringan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xaringan package&lt;/a&gt; by 
&lt;a href=&#34;https://yihui.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Yihui
Xie&lt;/a&gt; for making HTML-based slides with R Markdown.
That package wraps a third-party JavaScript library called

&lt;a href=&#34;https://github.com/gnab/remark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;remark.js&lt;/a&gt; and lets you use that to
knit R code and its output into your remark.js slides. I’ve used
xaringan for 
&lt;a href=&#34;https://alison.rbind.io/talk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;years&lt;/a&gt;, and have taught it
quite a lot too. It helps me make slides like this:&lt;/p&gt;
&lt;div class=&#34;shareagain&#34; style=&#34;min-width:300px;margin:1em auto;&#34;&gt;
&lt;iframe src=&#34;https://alison.netlify.app/ares-kind-tools/#1&#34; width=&#34;1600&#34; height=&#34;900&#34; style=&#34;border:2px solid currentColor;&#34; loading=&#34;lazy&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;script&gt;fitvids(&#39;.shareagain&#39;, {players: &#39;iframe&#39;});&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;I love it, but also recognize that 
&lt;a href=&#34;https://community.rstudio.com/t/r-presentations-for-beginners/1222&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;it is
hard&lt;/a&gt;,
and that it is not intended for beginners (hence the “ninja” references
in the package name and supporting documentation).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Which is too bad, because I think HTML-based slides are a great way for beginners to get started using R Markdown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So here we are! Why aren’t people using reveal.js? I set out to find
out, and thought this was a great example of one of the things I love
most about being a Product Manager. Since I am not a current user, but
would conceivably be a target user, I get to play the part of the
“wide-eyed doe in the woods” - eager to learn but also a little cautious - will reveal.js cause me pain? It is likely&lt;/p&gt;
&lt;p&gt;Plus, since it has been almost 6 months since my last blog post, I thought I would turn this early research project into a blog post to give a glimpse of some of the daily work I do as the Product Manager for Data Science Communication at RStudio.&lt;/p&gt;




&lt;h2 id=&#34;goal&#34;&gt;Goal
  &lt;a href=&#34;#goal&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Understand how users experience using reveal.js to make slides, and
identify areas for improvement.&lt;/p&gt;




&lt;h2 id=&#34;the-competition&#34;&gt;The competition
  &lt;a href=&#34;#the-competition&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;The landscape of HTML slide-making is unfortunately pretty big, but it’s important to sketch it out. There
are lots of frameworks, largely based off of different JavaScript tools.
I see almost a new one a month! If you just look at Pandoc alone, it
supports 
&lt;a href=&#34;https://pandoc.org/MANUAL.html#slide-shows&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;five different
frameworks&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://meyerweb.com/eric/tools/s5/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;S5&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://paulrouget.com/dzslides/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DZSlides&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.w3.org/Talks/Tools/Slidy2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slidy&lt;/a&gt;,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://goessner.net/articles/slideous/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slideous&lt;/a&gt;, or&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://revealjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reveal.js&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/gnab/remark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remark.js&lt;/a&gt; is another popular one, as I
mentioned earlier. There is also

&lt;a href=&#34;https://webslides.tv/#slide=1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Webslides&lt;/a&gt;. And

&lt;a href=&#34;https://sli.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slidev&lt;/a&gt;. And 
&lt;a href=&#34;https://github.com/shower/shower&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shower&lt;/a&gt;. And 
&lt;a href=&#34;https://marp.app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Marp&lt;/a&gt;. And more I’m sure! (In fact, here is a 
&lt;a href=&#34;https://gist.github.com/johnloy/27dd124ad40e210e91c70dd1c24ac8c8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gist&lt;/a&gt; with more.)&lt;/p&gt;
&lt;p&gt;The rmarkdown package also supports

&lt;a href=&#34;https://pkgs.rstudio.com/rmarkdown/reference/ioslides_presentation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ioslides&lt;/a&gt;
as an output format.&lt;/p&gt;




&lt;h2 id=&#34;why-revealjs&#34;&gt;Why reveal.js?
  &lt;a href=&#34;#why-revealjs&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So starting simple: why do we think R Markdown users could benefit from
using reveal.js?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Pandoc slide syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://rstudio.github.io/visual-markdown-editing/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visual editor
support&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Powered by 
&lt;a href=&#34;https://slides.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slides.com&lt;/a&gt; for publishing/sharing-
so well supported (that is paid though)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Good docs: 
&lt;a href=&#34;https://revealjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extensive plug-ins are available to extend:

&lt;a href=&#34;https://revealjs.com/plugins/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/plugins/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We have an existing package (
&lt;a href=&#34;https://github.com/rstudio/revealjs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rstudio/revealjs&lt;/a&gt;)
(albeit a little out-of-date)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built in themes: 
&lt;a href=&#34;https://revealjs.com/themes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/themes/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is also a supported slideshow framework for Jupyter/IPython via

&lt;a href=&#34;https://rise.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RISE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom themes are possible (but perhaps not easy) using SASS layers: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;research-questions&#34;&gt;Research questions
  &lt;a href=&#34;#research-questions&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Given all these pluses, and the competition, what do we want to know/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Functionality]&lt;/code&gt; How, if at all, do users expect to use reveal.js?
What problems does it solve for them, and what are unaddressed
problems?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Ease of use]&lt;/code&gt; Where, if at all, do users express uncertainty,
frustration, or confusion? What API problems arise?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Task success]&lt;/code&gt; What kinds of messages, warnings, or errors do
users encounter when using reveal.js? Where, if at all, do they get
stuck or confused? What, if any, strategies or resources do they
find for troubleshooting?&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id=&#34;method&#34;&gt;Method
  &lt;a href=&#34;#method&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;With these goals in mind, I wanted to start with just a few days of work, because I couldn’t tell how big of a project this was. So I didn’t want to do user interviews.&lt;/p&gt;
&lt;p&gt;Instead, I relied on combing through community forums, blog posts,
existing documentation, and GitHub issues to trace the outline of the
problem space first. I actually got a lot of mileage from this exercise,
even without direct user input.&lt;/p&gt;
&lt;p&gt;Here were some of my primary research resources (GitHub issues I tracked
inline with my notes below):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;http://www.jenniferbradham.org/post/reveal_js_markdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.jenniferbradham.org/post/reveal_js_markdown/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.caitlincasar.com/post/revealjs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.caitlincasar.com/post/revealjs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://danmackinlay.name/notebook/presentation_tools.html#reveal.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://danmackinlay.name/notebook/presentation_tools.html#reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://codingclubuc3m.rbind.io/post/2019-09-24/#reveal.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://codingclubuc3m.rbind.io/post/2019-09-24/#reveal.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Community thread:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://community.rstudio.com/t/r-presentations-for-beginners/1222&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://community.rstudio.com/t/r-presentations-for-beginners/1222&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pandoc docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://pandoc.org/MANUAL.html#background-in-reveal.js-and-beamer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pandoc.org/MANUAL.html#background-in-reveal.js-and-beamer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pandoc.org/MANUAL.html#variables-for-html-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pandoc.org/MANUAL.html#variables-for-html-slides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/revealjs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bookdown.org/yihui/rmarkdown/revealjs.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/rstudio/revealjs#r-markdown-format-for-revealjs-presentations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/rstudio/revealjs#r-markdown-format-for-revealjs-presentations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This kind of research is sort of akin to bushwhacking. There is no clear trail, and you are traveling in sort of wild country. There may be lots of noise in all these channels that actually isn’t accurate, so you have to trust your own intuition some and do your own testing even more.&lt;/p&gt;
&lt;p&gt;I’ll note here that a red flag right off the bat for me is that we don’t even have revealjs tagged on 
&lt;a href=&#34;https://community.rstudio.com/search?q=revealjs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RStudio Community&lt;/a&gt;, so we aren’t exactly advertising usage. Nevertheless, there are questions about it on there, which seem to largely go unanswered. I also didn’t find a lot of blog posts or meetup presentations on the topic. If you know the #rstats community, you know that sharing knowledge is basically baked in, so this tells you &lt;em&gt;something&lt;/em&gt; is up (but it could be messaging - the tool may still be great!).&lt;/p&gt;




&lt;h2 id=&#34;what-works&#34;&gt;What works?
  &lt;a href=&#34;#what-works&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Before reading through many of the blog posts and community forum
threads, I also actually just used the tool.&lt;/p&gt;
&lt;p&gt;Here was my minimal demo deck:&lt;/p&gt;
&lt;iframe src=&#34;https://revealing-slides.netlify.app/#/title-slide&#34; width=&#34;672&#34; height=&#34;400px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;I tried to follow the docs myself, and maintain a 
&lt;a href=&#34;https://www.trychameleon.com/blog/friction-logs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;friction log&lt;/a&gt; of what worked well and what didn’t. If I stumbled, I tried to make a mental note to actually figure out why at some point. It could be an actual bug, or it could be that my mental model is wrong, or it could be that I trusted a doc or a user’s guide and that led me astray. Whatever it is, it’s important that I track what went wrong. Here is my scratchpad of what I tried that &lt;strong&gt;did&lt;/strong&gt; work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Multi-column layout (but, a bit clunky? Have to create container first. In xaringan, this is just &lt;code&gt;.pull-left[contents...]&lt;/code&gt; and &lt;code&gt;.pull-right[contents...]&lt;/code&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::: {.columns} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: {.column width=&amp;#34;40%&amp;#34;} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;contents… 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: {.column width=&amp;#34;60%&amp;#34;} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;contents… 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::::
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tile view: &lt;kbd&gt;escape&lt;/kbd&gt; kbd shortcut - very cool!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Although why does tile view show all top aligned slides instead
of centered?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vertical slides: Aha you invoke vertical slides by using level 1
headers! (essentially, by adding sections). The “default” horizontal
slide layout depends on using &lt;code&gt;##&lt;/code&gt; for all slide headers - a bit of a
gotcha to folks so we’ll need to really document and teach this well&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pandoc’s docs on this:
&lt;strong&gt;Note: in reveal.js slide shows, if slide
level is 2, a two-dimensional layout will be produced, with
level-1 headings building horizontally and level-2 headings
building vertically. It is not recommended that you use deeper
nesting of section levels with reveal.js.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The option for vertical is actually nice- several customers have
mentioned to me that they like it for making flexible
presentations (i.e., if you have 5 min, you do just the
horizontal, if you have 20 you know you can go down and use the
vertical)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speaker notes + &lt;code&gt;s&lt;/code&gt; kbd shortcut for speaker view- nice, awesome&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;::: notes 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is my note.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;   It can contain Markdown
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;   like this list 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:::
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hidden slides- nice, awesome&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## {visibility=&amp;#34;hidden&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cool layout options: 
&lt;a href=&#34;https://revealjs.com/layout/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/layout/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backgrounds for individual slides- images, transitions, all per slide, all work great (but! see the &lt;code&gt;oof&lt;/code&gt; below regarding relative vs absolute image paths on GH pages)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## CSS color bg {background=#ff0000}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Full size image bg {background=&amp;#34;background.jpeg&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## Video bg {background-video=&amp;#34;background.mp4&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#aaa&#34;&gt;## A bg html page {background-iframe=&amp;#34;https://example.com&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;what-might-work-but-i-dont-know-for-sure&#34;&gt;What might work but I don’t know for sure?
  &lt;a href=&#34;#what-might-work-but-i-dont-know-for-sure&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This syntax should work to change a slide background using the three dashes as the slide separator instead of the level 2 markdown header, but does not:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- {background-color=&amp;#34;#FBD989&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[TODO]: test with updated Pandoc, file bug if still doesn&#39;t work&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How do I change syntax highlighting themes using the built-in highlight.js? 
&lt;a href=&#34;https://revealjs.com/code/#theming&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/code/#theming&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;See: 
&lt;a href=&#34;http://arm.rbind.io/slides/xaringan.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://arm.rbind.io/slides/xaringan.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NOTE: the R package we have has a YAML key for this&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These are all very nice code chunk effects- how would I use with
knitr chunks? 
&lt;a href=&#34;https://revealjs.com/code/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/code/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two column incremental?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[TODO:] test this&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Want to see slide numbers out of total, but this does not work: &lt;code&gt;slideNumber: &#39;c/t&#39;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;See: 
&lt;a href=&#34;https://revealjs.com/slide-numbers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/slide-numbers/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[TODO:] test with latest Pandoc and file issue there if can     confirm bug with reprex&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;what-needs-to-change&#34;&gt;What needs to change?
  &lt;a href=&#34;#what-needs-to-change&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Difficult to style out of the box (i.e., you are in CSS inspect
element world).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;“Creating themes seems to require you to fork reveal’s github
repo for full generality, which feels a bit weird…Either way,
in practice theming can be a rabbit hole of flex-box and
responsive media queries.” - blog post&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“Note - if you are an artist (or very focused on small visual
details), then you might want to reconsider using reveal.js.” -
blog post&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build in SASS/SCSS support&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I made my own:

&lt;a href=&#34;https://github.com/apreshill/revealing-slides/blob/main/assets/my-style.scss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/apreshill/revealing-slides/blob/main/assets/my-style.scss&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then used the sass package to compile to css:

&lt;a href=&#34;https://github.com/apreshill/revealing-slides/blob/main/assets/compile-sass.R&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/apreshill/revealing-slides/blob/main/assets/compile-sass.R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then used the css key in the YAML&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The visual editor view is disorienting (hard to see where slides start/end):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;editor.png&#34; alt=&#34;visual editor mode with reveal.js slides&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Accessibility: slide tones on advance?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See: 
&lt;a href=&#34;https://pkg.garrickadenbuie.com/xaringanExtra/#/slide-tone&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.garrickadenbuie.com/xaringanExtra/#/slide-tone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/32956342/with-reveal-js-how-can-i-make-slides-change-upon-completion-of-embedded-media&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/32956342/with-reveal-js-how-can-i-make-slides-change-upon-completion-of-embedded-media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[TODO:] test out this plugin: &amp;lt;https://github.com/rajgoel/reveal.js-plugins/tree/master/audio-slideshow&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adding a logo is hard, needs to be easier. See also:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://arm.rbind.io/slides/xaringan.html#121&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://arm.rbind.io/slides/xaringan.html#121&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://pkg.garrickadenbuie.com/xaringanExtra/#/logo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.garrickadenbuie.com/xaringanExtra/#/logo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Closed issue → solution is CSS: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/1122&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/issues/1122&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Changing the overall alignment is hard, needs to be easier (all centered by default):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/1897&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/issues/1897&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/41024596/r-markdown-slides-with-reveal-js-how-to-left-align-list-items-bullets-and-numb/41047550#41047550&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/41024596/r-markdown-slides-with-reveal-js-how-to-left-align-list-items-bullets-and-numb/41047550#41047550&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;center: false&lt;/code&gt; in the YAML, but this is only for
vertical alignment&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The default transitions look a bit dated…changing all to
“none” looks more modern&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[TODO:] change defaults?&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Transition style 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;transition: &amp;#39;slide&amp;#39; --&amp;gt; &amp;#39;none&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// none/fade/slide/convex/concave/zoom // 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// Transition style for full page slide backgrounds 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;backgroundTransition: &amp;#39;fade&amp;#39; --&amp;gt; &amp;#39;none&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// none/fade/slide/convex/concave/zoom
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Good + modern built-in themes- I have zero love for any of the existing themes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A good start for a style template: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/settings.scss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/settings.scss&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[TODO:] Provide a set of built-in themes that data scientists would want to use&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customizing title slide- looks like it is YAML only? It would be nice to be able to opt for using straight up HTML in the first slide as the title
slide. This is a Pandoc principle though across slide formats.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See: 
&lt;a href=&#34;http://arm.rbind.io/slides/xaringan.html#117&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://arm.rbind.io/slides/xaringan.html#117&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/40345094/reveal-js-title-slide-override&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/questions/40345094/reveal-js-title-slide-override&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build in shortcode for panelsets? I’m totally sold on panelsets for
slide decks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://pkg.garrickadenbuie.com/xaringanExtra/#/panelset&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pkg.garrickadenbuie.com/xaringanExtra/#/panelset&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easily use google fonts- maybe using YAML for fonts like bslib/sass package does (and does the dirty work for you to be able to work offline)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See: 
&lt;a href=&#34;https://rstudio.github.io/sass/reference/font_face.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://rstudio.github.io/sass/reference/font_face.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[TODO:] get bslib support for SASS/SCSS files in R package&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can
we make PDF exporting easier, perhaps with pagedown?

&lt;a href=&#34;https://revealjs.com/pdf-export/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://revealjs.com/pdf-export/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can we have emoji support?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Official answer is no: 
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/2517&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/hakimel/reveal.js/issues/2517&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Pandoc bug? The &lt;code&gt;data-&lt;/code&gt; prefix is not required for other attributes,
but in the YAML for the title slide they are required:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000080&#34;&gt;title-slide-attributes&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;data-background-image&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;/img/pink-paint.jpg&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000080&#34;&gt;data-background-size&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;cover&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;follow-up-in-the-future&#34;&gt;Follow-up in the future
  &lt;a href=&#34;#follow-up-in-the-future&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Live revealjs theme editor (v v v old):

&lt;a href=&#34;https://github.com/byteclubfr/uncloak&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/byteclubfr/uncloak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The menu plugin looks
interesting: 
&lt;a href=&#34;https://stackoverflow.com/a/61075371/9437012&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/a/61075371/9437012&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;As does
the spotlight plugin:

&lt;a href=&#34;https://github.com/denniskniep/reveal.js-plugin-spotlight&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/denniskniep/reveal.js-plugin-spotlight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Oof it looks like publishing ghpages from the project root misses files in subdirectories, note that none of my background images show up!
&lt;ul&gt;
&lt;li&gt;Note to self: use relative urls to images rather than absolute (so don’t
start with a slash if in subdirectory as the Pandoc docs led you to believe- that will generate absolute urls
that GH Pages will trip on- Netlify did not)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;




&lt;h2 id=&#34;my-final-answer&#34;&gt;My final answer
  &lt;a href=&#34;#my-final-answer&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;
      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;
      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;
    &lt;/svg&gt;&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;So the question I started with was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Why aren’t people using reveal.js for slides with R
Markdown? What are the problems with reveal.js, and how can we fix
them?”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My answer? I think there are a few factors working against reveal.js. The most obvious is that there is a noticeable lack of community engagement around the format - so there is an enthusiasm gap there between reveal.js and R packages like xaringan. The sheer number of options for HTML-based slide output formats leads folks toward using the one they see and hear about in the wild. That often starts with brave sharers on social media like Twitter, which then trickles down into user blog posts, folks who can answer questions on community, and ultimately contributors who improve the open-source software themselves. There have been amazing community contributions around the xaringan ecosystem. Have you heard of: 
&lt;a href=&#34;https://xaringan.club/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://xaringan.club/&lt;/a&gt; (brought to you by 
&lt;a href=&#34;https://www.garrickadenbuie.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Garrick&lt;/a&gt;)?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“The first rule of xaringan club is…we talk about xaringan.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Will there be a reveal.js club? I hope so! In my research, I found a lot of things to like working with reveal.js, and some things that I do think would serve R Markdown users and especially beginners well, perhaps even better than xaringan/remark.js. But, is there room for improvement? Always &amp;#x1f609;&lt;/p&gt;
&lt;p&gt;Honestly, with slide making tools, my own experience is that I’m less enthusiastic when I feel less empowered. I feel empowered as a user when a tool lets me customize the look and layout of my slides, with some guardrails to make sure I don’t enter the deep-dark CSS labyrinth. What I want is to fall into the “pit of beauty” more quickly, instead of the “pit of ugly” after hours of trying. See this interview with Hadley Wickham about the 
&lt;a href=&#34;https://www.auckland.ac.nz/en/news/2017/12/05/problem-solving-pits-of-success.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;“pit of success”&lt;/a&gt; if you don’t get this reference! In my experience, this is what will drive some brave adopters to dip their toe into reveal.js, and ultimately what might help teams take the plunge together.&lt;/p&gt;
&lt;p&gt;So what happens next? This was just the beginning, but it is where I’m at after a few days of research and testing. I know I’ll be using it for my next slide deck so stay tuned!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>


